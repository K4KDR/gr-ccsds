<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="page_mpsk_sender" kind="page">
    <compoundname>page_mpsk_sender</compoundname>
    <title>M-PSK modulation chain</title>
    <detaileddescription>
<sect1 id="page_mpsk_sender_1page_mpsk_sender_introduction">
<title>Introduction</title>
<para>This pages describes a general purpose M-PSK sender which can be used to transmitt arbitrary M-PSK signals. This block is available as GRC block in <emphasis>apps/blocks/mpsk_mod.grc</emphasis> </para><para>This block takes an input stream of packed data bytes and outputs complex M-PSK samples at sampling rate including an optional alternating BPSK preamble to allow the receiver to sync with this sender before sending the real M-PSK data symbols.</para></sect1>
<sect1 id="page_mpsk_sender_1page_mpsk_sender_setup">
<title>Setup</title>
<para>The Figure below shows the GRC block of this M-PSK modulation chain. It&apos;s parameters and individual blocks are described in the next Sections.</para><para><image type="html" name="mpsk_mod.png">Setup of the M-PSK modulation chain of this package</image>
 </para></sect1>
<sect1 id="page_mpsk_sender_1page_mpsk_sender_parameters">
<title>Parameters</title>
<sect2 id="page_mpsk_sender_1page_mpsk_sender_samp_rate">
<title>samp_rate</title>
<para>The sampling rate of the outgoing samples.</para></sect2>
<sect2 id="page_mpsk_sender_1page_mpsk_sender_M">
<title>M</title>
<para>The Modulation order of the signal. Must be a power of two.</para></sect2>
<sect2 id="page_mpsk_sender_1page_mpsk_sender_osf">
<title>osf</title>
<para>Oversampling factor, or samples per symbol. The sender block performs an upsampling by this factor. Oversampling must be at least two for most receivers to enable syncrhonization.</para></sect2>
<sect2 id="page_mpsk_sender_1page_mpsk_sender_alpha">
<title>alpha</title>
<para>Rollof factor from the TX filter, if the root raised cosine filter is used.</para></sect2>
<sect2 id="page_mpsk_sender_1page_mpsk_sender_preamble_len">
<title>preamble_len</title>
<para>Length of the optional BPSK preamble in symbols. If length is zero, no preamble is send.</para></sect2>
<sect2 id="page_mpsk_sender_1page_mpsk_sender_sym_rate">
<title>sym_rate</title>
<para>Symbol rate of the outgoing signal given by <computeroutput>samp_rate</computeroutput> / <computeroutput>osf</computeroutput>.</para></sect2>
<sect2 id="page_mpsk_sender_1page_mpsk_sender_ldM">
<title>ldM</title>
<para>Number of bits per symbol given by <computeroutput>ld(M)</computeroutput> with <computeroutput>ld</computeroutput> beeing the logarithmus dualis (<computeroutput>log</computeroutput> of base two).</para></sect2>
</sect1>
<sect1 id="page_mpsk_sender_1page_mpsk_sender_blocks">
<title>Blocks</title>
<sect2 id="page_mpsk_sender_1page_mpsk_sender_packed_to_unpacked">
<title>Byte unpacker</title>
<para>Takes the packed bytes from the input stream and output bytes with only <computeroutput>ldM</computeroutput> information bits in each output byte. The <computeroutput>ldM</computeroutput> bits containing the MSB are taken first, the ones containing the LSB are taken last. The standardt GNURadio Packed to Unpacked block is used.</para></sect2>
<sect2 id="page_mpsk_sender_1page_mpsk_sender_mod">
<title>M-PSK Modulator</title>
<para>The incomming unpacked bytes containing <computeroutput>ldM</computeroutput> information bits each are transformed into complex baseband symbols. Implemented in <ref refid="mpsk__mod__bc_8h" kindref="compound">mpsk_mod_bc.h</ref>.</para></sect2>
<sect2 id="page_mpsk_sender_1page_mpsk_sender_add_preamble">
<title>Preamble</title>
<para>Add <computeroutput>preamble_len</computeroutput> alternating BPSK symbols, before copying the input stream to the output stream. Implemented in <ref refid="mpsk__preamble__cc_8h" kindref="compound">mpsk_preamble_cc.h</ref>.</para></sect2>
<sect2 id="page_mpsk_sender_1page_mpsk_sender_filter">
<title>TX filter</title>
<para>The TX filter limits the bandwidth of the send signal and performs the oversampling by a factor of <computeroutput>osf</computeroutput>. The concatenation of this filter and the RX filter should fulfill the first Nyquist criterion. The simplest TX filter is a rectangular filter, leaving all the filtering to the receiver. The most common solution is to split the filters into equal halves at sending and receiving side and thus using a root raised cosine (RRC) filter at both sides.</para><para>These two options are predefined in the block and by default the RRC filter is used. The rectangular filter can be used by enabling the Low Pass Filter and disabling the Root Raised Cosine Filter.</para><para><xrefsect id="todo_1_todo000004"><xreftitle>Todo</xreftitle><xrefdescription><para>In the future this block should be able to switch between the two filters and leaving the GRC definition untouched. </para></xrefdescription></xrefsect></para><sect3 id="page_mpsk_sender_1page_mpsk_sender_filter_rrc">
<title>Root Raised Cosine Filter</title>
<para>A standard GRC RRC filter implementation is used.</para></sect3>
<sect3 id="page_mpsk_sender_1page_mpsk_sender_filter_rect">
<title>Rectangle Lowpass Interpolation Filter</title>
<para>A standard GRC filter implementation is used.</para></sect3>
</sect2>
</sect1>
<sect1 id="page_mpsk_sender_1page_mpsk_sender_introduction">
<title>Introduction</title>
<para>This pages describes a general purpose M-PSK sender which can be used to transmitt arbitrary M-PSK signals. This block is available as GRC block in <emphasis>apps/blocks/mpsk_mod.grc</emphasis> </para><para>This block takes an input stream of packed data bytes and outputs complex M-PSK samples at sampling rate including an optional alternating BPSK preamble to allow the receiver to sync with this sender before sending the real M-PSK data symbols.</para></sect1>
<sect1 id="page_mpsk_sender_1page_mpsk_sender_setup">
<title>Setup</title>
<para>The Figure below shows the GRC block of this M-PSK modulation chain. It&apos;s parameters and individual blocks are described in the next Sections.</para><para><image type="html" name="mpsk_mod.png">Setup of the M-PSK modulation chain of this package</image>
 </para></sect1>
<sect1 id="page_mpsk_sender_1page_mpsk_sender_parameters">
<title>Parameters</title>
<sect2 id="page_mpsk_sender_1page_mpsk_sender_samp_rate">
<title>samp_rate</title>
<para>The sampling rate of the outgoing samples.</para></sect2>
<sect2 id="page_mpsk_sender_1page_mpsk_sender_M">
<title>M</title>
<para>The Modulation order of the signal. Must be a power of two.</para></sect2>
<sect2 id="page_mpsk_sender_1page_mpsk_sender_osf">
<title>osf</title>
<para>Oversampling factor, or samples per symbol. The sender block performs an upsampling by this factor. Oversampling must be at least two for most receivers to enable syncrhonization.</para></sect2>
<sect2 id="page_mpsk_sender_1page_mpsk_sender_alpha">
<title>alpha</title>
<para>Rollof factor from the TX filter, if the root raised cosine filter is used.</para></sect2>
<sect2 id="page_mpsk_sender_1page_mpsk_sender_preamble_len">
<title>preamble_len</title>
<para>Length of the optional BPSK preamble in symbols. If length is zero, no preamble is send.</para></sect2>
<sect2 id="page_mpsk_sender_1page_mpsk_sender_sym_rate">
<title>sym_rate</title>
<para>Symbol rate of the outgoing signal given by <computeroutput>samp_rate</computeroutput> / <computeroutput>osf</computeroutput>.</para></sect2>
<sect2 id="page_mpsk_sender_1page_mpsk_sender_ldM">
<title>ldM</title>
<para>Number of bits per symbol given by <computeroutput>ld(M)</computeroutput> with <computeroutput>ld</computeroutput> beeing the logarithmus dualis (<computeroutput>log</computeroutput> of base two).</para></sect2>
</sect1>
<sect1 id="page_mpsk_sender_1page_mpsk_sender_blocks">
<title>Blocks</title>
<sect2 id="page_mpsk_sender_1page_mpsk_sender_packed_to_unpacked">
<title>Byte unpacker</title>
<para>Takes the packed bytes from the input stream and output bytes with only <computeroutput>ldM</computeroutput> information bits in each output byte. The <computeroutput>ldM</computeroutput> bits containing the MSB are taken first, the ones containing the LSB are taken last. The standardt GNURadio Packed to Unpacked block is used.</para></sect2>
<sect2 id="page_mpsk_sender_1page_mpsk_sender_mod">
<title>M-PSK Modulator</title>
<para>The incomming unpacked bytes containing <computeroutput>ldM</computeroutput> information bits each are transformed into complex baseband symbols. Implemented in <ref refid="classccsds__mpsk__mod__bc" kindref="compound">ccsds_mpsk_mod_bc</ref>.</para></sect2>
<sect2 id="page_mpsk_sender_1page_mpsk_sender_add_preamble">
<title>Preamble</title>
<para>Add <computeroutput>preamble_len</computeroutput> alternating BPSK symbols, before copying the input stream to the output stream. Implemented in <ref refid="classccsds__mpsk__preamble__cc" kindref="compound">ccsds_mpsk_preamble_cc</ref>.</para></sect2>
<sect2 id="page_mpsk_sender_1page_mpsk_sender_filter">
<title>TX filter</title>
<para>The TX filter limits the bandwidth of the send signal and performs the oversampling by a factor of <computeroutput>osf</computeroutput>. The concatenation of this filter and the RX filter should fulfill the first Nyquist criterion. The simplest TX filter is a rectangular filter, leaving all the filtering to the receiver. The most common solution is to split the filters into equal halves at sending and receiving side and thus using a root raised cosine (RRC) filter at both sides.</para><para>These two options are predefined in the block and by default the RRC filter is used. The rectangular filter can be used by enabling the Low Pass Filter and disabling the Root Raised Cosine Filter.</para><para><xrefsect id="todo_1_todo000007"><xreftitle>Todo</xreftitle><xrefdescription><para>In the future this block should be able to switch between the two filters and leaving the GRC definition untouched. </para></xrefdescription></xrefsect></para><sect3 id="page_mpsk_sender_1page_mpsk_sender_filter_rrc">
<title>Root Raised Cosine Filter</title>
<para>A standard GRC RRC filter implementation is used.</para></sect3>
<sect3 id="page_mpsk_sender_1page_mpsk_sender_filter_rect">
<title>Rectangle Lowpass Interpolation Filter</title>
<para>A standard GRC filter implementation is used. </para></sect3>
</sect2>
</sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
