/*! \page page_mpsk_ar M-PSK Phase Ambiguity Resolution

\section page_mpsk_ar_introduction Introduction
Phase ambiguity can be resolved by differential transmission or by a known pilot
sequence in the received signal. This page deals with the latter case.

In CCSDS systems the transfer frames are prefixed with a repeating, known bit
sequence: the attached sync marker (ASM) than can be used for ambiguity
resolution (AR).

This package provides two AR blocks, one for hard-bit decisions
and one for soft-bit decisions. Both work by creating all possible ambiguities
of an incomming stream and then searching for a known pilot sequence in them. If
the pilot sequence is found in one ambiguity stream and it is repeating in a
known pattern (after every transfer frame in CCSDS signals) the right ambiguity
is found and the stream with this ambiguity is send to the output of the AR
block.

\section page_mpsk_ar_lock_threshold Locking threshold
In order not to lose lock on a burst of bit errors both block can keep lock even
after not finding the ASM at their expected position for several times (bit
errors might still be corrected by later channelcoding blocks and thus the
stream shall not be dropped). However when there is a cycle slip in the upstream
PLL keeping up the lock although there are no ASMs anymore will result in frames
beeing dropped because the downstream blocks still see the old ambiguity stream.
So the selection of the locking threshold is a tradeoff 

\section page_mpsk_ar_hard Hard-bit Ambiguity Resolution
The hard-bit AR block implemented in (not implemented in gnuradio 3.7) is
looking the ASM sequence in an input stream of unpacked bytes (ld(M) information
bits per byte). The AR threads these unpacked bytes as symbols and not as
individual bytes in order to be able to create all other possible ambiguities
out of a symbol. In order to be robust against bit errors a configurable number
of bit errors may occur in an ambiguity stream and the block will still
recognize the ASM in it. 
*/
