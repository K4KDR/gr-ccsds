<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classccsds__pll__cc" kind="class" prot="public">
    <compoundname>ccsds_pll_cc</compoundname>
    <basecompoundref prot="public" virt="non-virtual">gr_block</basecompoundref>
    <includes refid="ccsds__pll__cc_8h" local="no">ccsds_pll_cc.h</includes>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classccsds__pll__cc_1aa2d022d624373d4aa0dcc1d3348fd454" prot="private" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double ccsds_pll_cc::D_TWOPI</definition>
        <argsstring></argsstring>
        <name>D_TWOPI</name>
        <briefdescription>
<para>Constant buffer of two pi with float precision. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_pll_cc.h" line="48" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_pll_cc.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classccsds__pll__cc_1a1e67952c28275ff8113b8ba073871dff" prot="private" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int ccsds_pll_cc::d_M</definition>
        <argsstring></argsstring>
        <name>d_M</name>
        <briefdescription>
<para>Storage for modulation order. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_pll_cc.h" line="51" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_pll_cc.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classccsds__pll__cc_1a69b2acc234c4ed30fa8064074f8738bc" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ccsds_pll_cc::d_lo_msg_tag</definition>
        <argsstring></argsstring>
        <name>d_lo_msg_tag</name>
        <briefdescription>
<para>Indicator whether the loop has recently received a frequency_offset tag or not. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>d_lo_msg_offset</para></simplesect>
If <emphasis>true</emphasis>, the loop has recently received a frequency_offset tag and the counter in ccsds_pll_cc::d_lo_msg_offset tells how many more saples the loop has to process before it should send the next frequency correction message.</para><para>If <emphasis>flase</emphasis>, the loop should look for new frequency_offset tags. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_pll_cc.h" line="66" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_pll_cc.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classccsds__pll__cc_1ad045a1fb274207d2c4751becca381ce7" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int ccsds_pll_cc::d_lo_msg_offset</definition>
        <argsstring></argsstring>
        <name>d_lo_msg_offset</name>
        <briefdescription>
<para>Number of samples that need to be processed by the loop before a new frequency correction message can be send out. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>d_lo_msg_tag</para></simplesect>
ccsds_pll_cc::lo_msg_tag indicates whether this value is valid, or not. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_pll_cc.h" line="76" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_pll_cc.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classccsds__pll__cc_1a53eb1930ee5e4b2b16f4041f05e0bc20" prot="private" static="no" mutable="no">
        <type><ref refid="classlpf2" kindref="compound">lpf2</ref> *</type>
        <definition>lpf2* ccsds_pll_cc::d_filter</definition>
        <argsstring></argsstring>
        <name>d_filter</name>
        <briefdescription>
<para>Filter used for smoothing the frequency estimates. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_pll_cc.h" line="79" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_pll_cc.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classccsds__pll__cc_1aea491e0d0613589f315d3f03b341da35" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float ccsds_pll_cc::d_phi_hat</definition>
        <argsstring></argsstring>
        <name>d_phi_hat</name>
        <briefdescription>
<para>Storage for current phase estimate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_pll_cc.h" line="82" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_pll_cc.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classccsds__pll__cc_1a6bf109046802b91e04a257f1775ce34b" prot="private" static="no" mutable="no">
        <type>FILE *</type>
        <definition>FILE* ccsds_pll_cc::dbg_file</definition>
        <argsstring></argsstring>
        <name>dbg_file</name>
        <briefdescription>
<para>File pointer for debugging. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_pll_cc.h" line="85" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_pll_cc.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classccsds__pll__cc_1a57521415fc782558d6463eb2bf8ccd83" prot="private" static="no" mutable="no">
        <type>FILE *</type>
        <definition>FILE* ccsds_pll_cc::dbg_file_lo</definition>
        <argsstring></argsstring>
        <name>dbg_file_lo</name>
        <briefdescription>
<para>File pointer for debugging. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_pll_cc.h" line="88" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_pll_cc.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classccsds__pll__cc_1a0b789349f76b6e1c3e62689c7be99bfd" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int ccsds_pll_cc::dbg_count</definition>
        <argsstring></argsstring>
        <name>dbg_count</name>
        <briefdescription>
<para>Counter for debugging. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_pll_cc.h" line="91" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_pll_cc.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classccsds__pll__cc_1a072acf80ab0fc646cc5acdcd9e58a910" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int ccsds_pll_cc::dbg_count_lo</definition>
        <argsstring></argsstring>
        <name>dbg_count_lo</name>
        <briefdescription>
<para>Counter for debugging. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_pll_cc.h" line="94" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_pll_cc.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classccsds__pll__cc_1a181cf0d61ba364f3ab240f1ad9251d43" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend __GR_ATTR_IMPORT <ref refid="ccsds__pll__cc_8h_1a30dfeb2156b83037df884fab35962c18" kindref="member">ccsds_pll_cc_sptr</ref></type>
        <definition>__GR_ATTR_IMPORT ccsds_pll_cc_sptr ccsds_make_pll_cc</definition>
        <argsstring>(unsigned int m, float loop_bandwidth)</argsstring>
        <name>ccsds_make_pll_cc</name>
        <param>
          <type>unsigned int</type>
          <declname>m</declname>
        </param>
        <param>
          <type>float</type>
          <declname>loop_bandwidth</declname>
        </param>
        <briefdescription>
<para>Generate a Phase locked loop and return it&apos;s shared pointer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>Modulation order of the signal. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>loop_bandwidth</parametername>
</parameternamelist>
<parameterdescription>
<para>Bandwidth of the loop filter. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_pll_cc.h" line="45" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classccsds__pll__cc_1a6997d0d80d0a9acf506b45ae7b429527" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ccsds_pll_cc::ccsds_pll_cc</definition>
        <argsstring>(unsigned int m, float loop_bandwidth)</argsstring>
        <name>ccsds_pll_cc</name>
        <param>
          <type>unsigned int</type>
          <declname>m</declname>
        </param>
        <param>
          <type>float</type>
          <declname>loop_bandwidth</declname>
        </param>
        <briefdescription>
<para>Private constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>Modulation order. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>loop_bandwidth</parametername>
</parameternamelist>
<parameterdescription>
<para>Bandwidth of the loop filter. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_pll_cc.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classccsds__pll__cc_1a93ccc6a049b2c75ac30e373955d434f1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ccsds_pll_cc::remove_modulation</definition>
        <argsstring>(gr_complex *tmp_c, const gr_complex *in, const unsigned int num)</argsstring>
        <name>remove_modulation</name>
        <param>
          <type>gr_complex *</type>
          <declname>tmp_c</declname>
        </param>
        <param>
          <type>const gr_complex *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>num</declname>
        </param>
        <briefdescription>
<para>Remove phase modulation by taking the M-th power of the samples. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tmp_c</parametername>
</parameternamelist>
<parameterdescription>
<para>Complex array in which the powered samples should be stored. Memory for at least <computeroutput>num</computeroutput> elements must be allocated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Complex array of samples which should be powered. Must contain at least <computeroutput>num</computeroutput> elements. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of samples to process. </para></parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="todo_1_todo000018"><xreftitle>Todo</xreftitle><xrefdescription><para>Check volk power impementation of new GNU Radio version and switch back to volk if it works. Change documentation to require aligned arrays.</para></xrefdescription></xrefsect></para><para>Remove modulation by following the M-power principle. The ccsds_pll_cc::d_M th power of the input samples is calculated and written to the complex array <computeroutput>tmp_c</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_pll_cc.h" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classccsds__pll__cc_1ab2634891034c093bcd4c46e0f5f2608f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ccsds_pll_cc::calc_phases</definition>
        <argsstring>(float *tmp_f, const gr_complex *tmp_c, const unsigned int num)</argsstring>
        <name>calc_phases</name>
        <param>
          <type>float *</type>
          <declname>tmp_f</declname>
        </param>
        <param>
          <type>const gr_complex *</type>
          <declname>tmp_c</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>num</declname>
        </param>
        <briefdescription>
<para>Calculate the phases of an array of complex numbers. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tmp_f</parametername>
</parameternamelist>
<parameterdescription>
<para><bold>Aligned</bold> array in which the calculated phases should be stored. <bold>Aligned</bold> memory for at least <computeroutput>num</computeroutput> elements must be allocated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tmp_c</parametername>
</parameternamelist>
<parameterdescription>
<para><bold>Aligned</bold> complex array of samples which&apos;s phases should be calculated. Must contain at least <computeroutput>num</computeroutput> elements. Memory must be <bold>aligned</bold>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of samples to process. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_pll_cc.h" line="134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classccsds__pll__cc_1a5918b3a3ad16256aa8f32f02bb8307ce" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ccsds_pll_cc::check_lo_tags</definition>
        <argsstring>(const uint64_t from, const unsigned int num)</argsstring>
        <name>check_lo_tags</name>
        <param>
          <type>const uint64_t</type>
          <declname>from</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>num</declname>
        </param>
        <briefdescription>
<para>Checks input stream for possible frequency_offset tags. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>Absolute counter of processed samples from which the tags should be searched. Any tags before this counter are ignored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>Number os samples that should be searched starting from <computeroutput>from</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="page_lo_feedback" kindref="compound">Local oscillator frequency correction feedback loop</ref> </para><simplesectsep/><para><ref refid="ccsds__lo__feedback_8h" kindref="compound">ccsds_lo_feedback.h</ref></para></simplesect>
If ccsds_pll_cc::d_lo_msg_tag is <emphasis>true</emphasis> the function will return immediatley. This means that the loop has allready eceived a frequency_offset tag within the last <ref refid="pll__cc__impl_8h_1a9f459ff4c7f8e14710114c69ede09166" kindref="member">PLL_FREQ_UPDATE</ref> samples and is now waiting for the counter to hit zero so a new frequency correction message can be send.</para><para>If ccsds_pll_cc::d_lo_msg_tag is <emphasis>false</emphasis>, the funktion will look for frequency_offset tags in range [from,from+num) and if any is found the earliest&apos;s relative offset to <computeroutput>from</computeroutput> plus <ref refid="pll__cc__impl_8h_1a9f459ff4c7f8e14710114c69ede09166" kindref="member">PLL_FREQ_UPDATE</ref> is stored in ccsds_pll_cc::d_lo_msg_offset and ccsds_pll_cc::d_lo_msg_tag is set to <emphasis>true</emphasis>. This will cause the loop to process another <ref refid="pll__cc__impl_8h_1a9f459ff4c7f8e14710114c69ede09166" kindref="member">PLL_FREQ_UPDATE</ref> samples before new frequency correction messages are send. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_pll_cc.h" line="160" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classccsds__pll__cc_1a177fa3957c49a7a3359a4e5c2691eced" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ccsds_pll_cc::send_freq_estimate</definition>
        <argsstring>(double est)</argsstring>
        <name>send_freq_estimate</name>
        <param>
          <type>double</type>
          <declname>est</declname>
        </param>
        <briefdescription>
<para>Send a frequency correction message. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>est</parametername>
</parameternamelist>
<parameterdescription>
<para>Per symbol phase increase (i.e. frequency) estimate in radians are send out on port &quot;freq&quot; as double. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="page_lo_feedback" kindref="compound">Local oscillator frequency correction feedback loop</ref> </para><simplesectsep/><para><ref refid="ccsds__lo__feedback_8h" kindref="compound">ccsds_lo_feedback.h</ref></para></simplesect>
Sends given estimate <computeroutput>est</computeroutput> to output port &quot;freq&quot; according to <ref refid="page_lo_feedback_1page_lo_feedback_msg" kindref="member">Frequency correction messages</ref> <xrefsect id="todo_1_todo000019"><xreftitle>Todo</xreftitle><xrefdescription><para>document new message passing type of frequency correction </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_pll_cc.h" line="173" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classccsds__pll__cc_1ad7ba5d86001671cd6526714d2d56697c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ccsds_pll_cc::calc_rotation</definition>
        <argsstring>(gr_complex *out, const gr_complex *in, const float *tmp_f, const unsigned int num)</argsstring>
        <name>calc_rotation</name>
        <param>
          <type>gr_complex *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const gr_complex *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>tmp_f</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>num</declname>
        </param>
        <briefdescription>
<para>Rotates complex array according to phase estimates. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Complex array to store the rotated samples in. Memory for at least <computeroutput>num</computeroutput> elements must be allocated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Complex array of samples to be rotated. Must contain at least <computeroutput>num</computeroutput> elements. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tmp_f</parametername>
</parameternamelist>
<parameterdescription>
<para>Sample&apos;s phase estimate in radians. Must contain at least <computeroutput>num</computeroutput> elements. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of samples to process.</para></parameterdescription>
</parameteritem>
</parameterlist>
Rotates samplewise by estimated phase. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_pll_cc.h" line="187" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classccsds__pll__cc_1ab0b58895002c922ae8dfb06890ddf7fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ccsds_pll_cc::~ccsds_pll_cc</definition>
        <argsstring>()</argsstring>
        <name>~ccsds_pll_cc</name>
        <briefdescription>
<para>Public deconstructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_pll_cc.h" line="192" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classccsds__pll__cc_1a85d0480a24d8a526d182638c7434c93f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ccsds_pll_cc::general_work</definition>
        <argsstring>(int noutput_items, gr_vector_int &amp;ninput_items, gr_vector_const_void_star &amp;input_items, gr_vector_void_star &amp;output_items)</argsstring>
        <name>general_work</name>
        <param>
          <type>int</type>
          <declname>noutput_items</declname>
        </param>
        <param>
          <type>gr_vector_int &amp;</type>
          <declname>ninput_items</declname>
        </param>
        <param>
          <type>gr_vector_const_void_star &amp;</type>
          <declname>input_items</declname>
        </param>
        <param>
          <type>gr_vector_void_star &amp;</type>
          <declname>output_items</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_pll_cc.h" line="194" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Phase locked loop that sends frequency correction messages. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="see"><para><ref refid="page_lo_feedback" kindref="compound">Local oscillator frequency correction feedback loop</ref> </para><simplesectsep/><para><ref refid="ccsds__lo__feedback_8h" kindref="compound">ccsds_lo_feedback.h</ref></para></simplesect>
Phase locked loop using the Viterbi&amp;Viterbi method to estimate the sample&apos;s phase offset. Estimates are filtered with a linear second order low pass filter.</para><para>After reception of a frequency_offset tag the loop waits for another <ref refid="pll__cc__impl_8h_1a9f459ff4c7f8e14710114c69ede09166" kindref="member">PLL_FREQ_UPDATE</ref> samples before a new frequency correction message is send out to close the frequency feedback loop.</para><para>Frequency corrections are send out on the port &quot;freq&quot;. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="114">
        <label>ccsds_pll_cc</label>
        <link refid="classccsds__pll__cc"/>
        <childnode refid="115" relation="public-inheritance">
        </childnode>
      </node>
      <node id="115">
        <label>gr_block</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="116">
        <label>ccsds_pll_cc</label>
        <link refid="classccsds__pll__cc"/>
        <childnode refid="117" relation="public-inheritance">
        </childnode>
      </node>
      <node id="117">
        <label>gr_block</label>
      </node>
    </collaborationgraph>
    <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_pll_cc.h" line="43" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_pll_cc.h" bodystart="42" bodyend="198"/>
    <listofallmembers>
      <member refid="classccsds__pll__cc_1ab2634891034c093bcd4c46e0f5f2608f" prot="private" virt="non-virtual"><scope>ccsds_pll_cc</scope><name>calc_phases</name></member>
      <member refid="classccsds__pll__cc_1ad7ba5d86001671cd6526714d2d56697c" prot="private" virt="non-virtual"><scope>ccsds_pll_cc</scope><name>calc_rotation</name></member>
      <member refid="classccsds__pll__cc_1a181cf0d61ba364f3ab240f1ad9251d43" prot="private" virt="non-virtual"><scope>ccsds_pll_cc</scope><name>ccsds_make_pll_cc</name></member>
      <member refid="classccsds__pll__cc_1a6997d0d80d0a9acf506b45ae7b429527" prot="private" virt="non-virtual"><scope>ccsds_pll_cc</scope><name>ccsds_pll_cc</name></member>
      <member refid="classccsds__pll__cc_1a5918b3a3ad16256aa8f32f02bb8307ce" prot="private" virt="non-virtual"><scope>ccsds_pll_cc</scope><name>check_lo_tags</name></member>
      <member refid="classccsds__pll__cc_1a53eb1930ee5e4b2b16f4041f05e0bc20" prot="private" virt="non-virtual"><scope>ccsds_pll_cc</scope><name>d_filter</name></member>
      <member refid="classccsds__pll__cc_1ad045a1fb274207d2c4751becca381ce7" prot="private" virt="non-virtual"><scope>ccsds_pll_cc</scope><name>d_lo_msg_offset</name></member>
      <member refid="classccsds__pll__cc_1a69b2acc234c4ed30fa8064074f8738bc" prot="private" virt="non-virtual"><scope>ccsds_pll_cc</scope><name>d_lo_msg_tag</name></member>
      <member refid="classccsds__pll__cc_1a1e67952c28275ff8113b8ba073871dff" prot="private" virt="non-virtual"><scope>ccsds_pll_cc</scope><name>d_M</name></member>
      <member refid="classccsds__pll__cc_1aea491e0d0613589f315d3f03b341da35" prot="private" virt="non-virtual"><scope>ccsds_pll_cc</scope><name>d_phi_hat</name></member>
      <member refid="classccsds__pll__cc_1aa2d022d624373d4aa0dcc1d3348fd454" prot="private" virt="non-virtual"><scope>ccsds_pll_cc</scope><name>D_TWOPI</name></member>
      <member refid="classccsds__pll__cc_1a0b789349f76b6e1c3e62689c7be99bfd" prot="private" virt="non-virtual"><scope>ccsds_pll_cc</scope><name>dbg_count</name></member>
      <member refid="classccsds__pll__cc_1a072acf80ab0fc646cc5acdcd9e58a910" prot="private" virt="non-virtual"><scope>ccsds_pll_cc</scope><name>dbg_count_lo</name></member>
      <member refid="classccsds__pll__cc_1a6bf109046802b91e04a257f1775ce34b" prot="private" virt="non-virtual"><scope>ccsds_pll_cc</scope><name>dbg_file</name></member>
      <member refid="classccsds__pll__cc_1a57521415fc782558d6463eb2bf8ccd83" prot="private" virt="non-virtual"><scope>ccsds_pll_cc</scope><name>dbg_file_lo</name></member>
      <member refid="classccsds__pll__cc_1a85d0480a24d8a526d182638c7434c93f" prot="public" virt="non-virtual"><scope>ccsds_pll_cc</scope><name>general_work</name></member>
      <member refid="classccsds__pll__cc_1a93ccc6a049b2c75ac30e373955d434f1" prot="private" virt="non-virtual"><scope>ccsds_pll_cc</scope><name>remove_modulation</name></member>
      <member refid="classccsds__pll__cc_1a177fa3957c49a7a3359a4e5c2691eced" prot="private" virt="non-virtual"><scope>ccsds_pll_cc</scope><name>send_freq_estimate</name></member>
      <member refid="classccsds__pll__cc_1ab0b58895002c922ae8dfb06890ddf7fc" prot="public" virt="non-virtual"><scope>ccsds_pll_cc</scope><name>~ccsds_pll_cc</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
