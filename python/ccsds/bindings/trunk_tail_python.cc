/*
 * Copyright 2023 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(trunk_tail.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(8afe114ad5089268a234a11c20d49a4e)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/ccsds/trunk_tail.h>
// pydoc.h is automatically generated in the build directory
#include <trunk_tail_pydoc.h>

void bind_trunk_tail(py::module& m)
{

    using trunk_tail = ::gr::ccsds::trunk_tail;


    py::class_<trunk_tail,
               gr::sync_block,
               gr::block,
               gr::basic_block,
               std::shared_ptr<trunk_tail>>(m, "trunk_tail", D(trunk_tail))

        .def(py::init(&trunk_tail::make),
             py::arg("trunc_len"),
             py::arg("frame_len"),
             py::arg("blanc_bits"),
             D(trunk_tail, make))


        ;
}
