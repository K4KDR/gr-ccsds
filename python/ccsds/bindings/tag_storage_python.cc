/*
 * Copyright 2023 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(tag_storage.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(0e3a61209feb982fa5e09836931bc991)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/ccsds/tag_storage.h>
// pydoc.h is automatically generated in the build directory
#include <tag_storage_pydoc.h>

void bind_tag_storage(py::module& m)
{

    using tag_storage = ::gr::ccsds::tag_storage;


    py::class_<tag_storage, gr::block, gr::basic_block, std::shared_ptr<tag_storage>>(
        m, "tag_storage", D(tag_storage))

        .def(py::init(&tag_storage::make), D(tag_storage, make))


        .def("num_tags", &tag_storage::num_tags, D(tag_storage, num_tags))


        .def("get_tags", &tag_storage::get_tags, D(tag_storage, get_tags))


        .def("get_tag", &tag_storage::get_tag, py::arg("num"), D(tag_storage, get_tag))


        .def("finished", &tag_storage::finished, D(tag_storage, finished))

        ;
}
