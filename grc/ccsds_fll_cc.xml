<?xml version="1.0"?>
<block>
	<name>FLL (CCSDS)</name>
	<key>ccsds_fll_cc</key>
	<category>CCSDS/Receiver/Synchronization</category>
	<import>import ccsds</import>
	<make>ccsds.fll_cc($L,$bw,$power,$(id)_msgq_out)</make>
	<param>
		<name>Power</name>
		<key>power</key>
		<value>1</value>
		<type>int</type>
	</param>
	<param>
		<name>Observation length</name>
		<key>L</key>
		<value>4</value>
		<type>int</type>
	</param>
	<param>
		<name>Loop bandwidth</name>
		<key>bw</key>
		<value>0.01</value>
		<type>real</type>
	</param>
	<check>$L >= 1</check>
	<check>$bw > 0</check>
	<check>$power >= 1</check>
	<sink>
		<name>in</name>
		<type>complex</type>
	</sink>
	<source>
		<name>out</name>
		<type>complex</type>
	</source>
	<source>
		<name>freq</name>
		<type>msg</type>
	</source>
	<doc>
Frequency locked loop.

A M-PSK modulation can be removed first by taking the Mth power of each sample
and dividing the resulting phase by M after the phase difference calculations.
The phase rotation between each symbol is computed and averaged to cancel
any left modulations. The samples are rotated back by the estimated frequency.
The estimates are smoothed by a linear first order low pass filter.

Power: Instead of inspecting the original incomming samples, the x-th power of
the sample is inspected. By choosing M as power for M-PSK data the complete
modulation is removed before frequency estimation.

Observation length: Number of samples over which should be averaged before
frequency estimation. With equal symbol transition propabilities this average
can cancel out modulation. Larger values will also suppress thermal noise
influence on the estimate.

Loop bandwidth: Bandwidth of the low pass filter to smooth the frequency
estimates relative to the symbol rate. Lower values will make the estimator more
restistant to distortions, but the value needs to be high enough to follow the
changes in channel frequency.
frequency
	</doc>
</block>
