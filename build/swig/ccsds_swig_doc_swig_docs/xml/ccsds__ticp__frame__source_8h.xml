<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="ccsds__ticp__frame__source_8h" kind="file">
    <compoundname>ccsds_ticp_frame_source.h</compoundname>
    <includes refid="ccsds__api_8h" local="no">ccsds_api.h</includes>
    <includes local="no">gr_block.h</includes>
    <includes local="no">string</includes>
    <includes local="no">ticp/TicpClient.hpp</includes>
    <includes local="no">boost/thread.hpp</includes>
    <includes local="no">boost/shared_ptr.hpp</includes>
    <includes local="no">asynchronous_start.hpp</includes>
    <includes refid="gr-ccsds_2include_2ccsds__time_8h" local="no">ccsds_time.h</includes>
    <incdepgraph>
      <node id="326">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="321">
        <label>gruel/attributes.h</label>
      </node>
      <node id="320">
        <label>ccsds_api.h</label>
        <link refid="ccsds__api_8h"/>
        <childnode refid="321" relation="include">
        </childnode>
      </node>
      <node id="323">
        <label>string</label>
      </node>
      <node id="325">
        <label>boost/thread.hpp</label>
      </node>
      <node id="324">
        <label>ticp/TicpClient.hpp</label>
      </node>
      <node id="322">
        <label>gr_block.h</label>
      </node>
      <node id="329">
        <label>time.h</label>
      </node>
      <node id="328">
        <label>ccsds_time.h</label>
        <link refid="gr-ccsds_2include_2ccsds__time_8h"/>
        <childnode refid="329" relation="include">
        </childnode>
      </node>
      <node id="319">
        <label>/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_ticp_frame_source.h</label>
        <link refid="ccsds_ticp_frame_source.h"/>
        <childnode refid="320" relation="include">
        </childnode>
        <childnode refid="322" relation="include">
        </childnode>
        <childnode refid="323" relation="include">
        </childnode>
        <childnode refid="324" relation="include">
        </childnode>
        <childnode refid="325" relation="include">
        </childnode>
        <childnode refid="326" relation="include">
        </childnode>
        <childnode refid="327" relation="include">
        </childnode>
        <childnode refid="328" relation="include">
        </childnode>
      </node>
      <node id="327">
        <label>asynchronous_start.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="classccsds__ticp__frame__source" prot="public">ccsds_ticp_frame_source</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="ccsds__ticp__frame__source_8h_1a46626f8a3f34bee232e39512d3ae6a77" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classccsds__ticp__frame__source" kindref="compound">ccsds_ticp_frame_source</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;ccsds_ticp_frame_source&gt; ccsds_ticp_frame_source_sptr</definition>
        <argsstring></argsstring>
        <name>ccsds_ticp_frame_source_sptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_ticp_frame_source.h" line="34" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_ticp_frame_source.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ccsds__ticp__frame__source_8h_1a44adb8c7b9cd978bd7c2ebb6ce767851" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__GR_ATTR_IMPORT <ref refid="ccsds__ticp__frame__source_8h_1a46626f8a3f34bee232e39512d3ae6a77" kindref="member">ccsds_ticp_frame_source_sptr</ref></type>
        <definition>__GR_ATTR_IMPORT ccsds_ticp_frame_source_sptr ccsds_make_ticp_frame_source</definition>
        <argsstring>(std::string hostname, unsigned int port, const unsigned int frame_length, const uint8_t data_type, std::vector&lt; std::string &gt; map_names, std::vector&lt; uint8_t &gt; map_types, const double frame_rate=0.0)</argsstring>
        <name>ccsds_make_ticp_frame_source</name>
        <param>
          <type>std::string</type>
          <declname>hostname</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>frame_length</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>data_type</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt;</type>
          <declname>map_names</declname>
        </param>
        <param>
          <type>std::vector&lt; uint8_t &gt;</type>
          <declname>map_types</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>frame_rate</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
<para>Return a shared_ptr to a new instance of <ref refid="classccsds__ticp__frame__source" kindref="compound">ccsds_ticp_frame_source</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Create an instance of <ref refid="classccsds__ticp__frame__source" kindref="compound">ccsds_ticp_frame_source</ref> and return it&apos;s shared_ptr.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hostname</parametername>
</parameternamelist>
<parameterdescription>
<para>Hostname of the TicpServer from which to get the data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Port of the TicpServer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frame_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of a frame in bytes. should be copied to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the dataset which&apos;s data should be used for the actuall output data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>map_names</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of names that should be used for the PDU header metadata identifier. Can be empty. Must have the same length as map_types. All elements in this vector must be unique. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>map_types</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of datatypes that should be extracted into the PDU header. Can be empty. Must have the same length as map_names. All elements in this vector must be unique. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frame_rate</parametername>
</parameternamelist>
<parameterdescription>
<para>Rate in frames per second at which new frames should be requested from the TICP server. This provides an upper bound for the frame rate, based on the data received from the TICP server the actual rate can be lower. If set to 0.0, no rate limitation is applied and the frames are read in and send out as fast as possible. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Shared pointer to the created AR block </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_ticp_frame_source.h" line="60" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>INCLUDED_CCSDS_TICP_FRAME_SOURCE_H</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>INCLUDED_CCSDS_TICP_FRAME_SOURCE_H</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ccsds__api_8h" kindref="compound">ccsds_api.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gr_block.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ticp/TicpClient.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/thread.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/shared_ptr.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;asynchronous_start.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="gr-ccsds_2include_2ccsds__time_8h" kindref="compound">ccsds_time.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">//<sp/>#define<sp/>TICP_FRAME_SOURCE_DEBUG<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="comment">//<sp/>#define<sp/>PROFILE_NUM_SAMPS<sp/>10000000u</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="ccsds__ticp__frame__source_8h_1a46626f8a3f34bee232e39512d3ae6a77" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classccsds__ticp__frame__source" kindref="compound">ccsds_ticp_frame_source</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>We<sp/>use<sp/>boost::shared_ptr&apos;s<sp/>instead<sp/>of<sp/>raw<sp/>pointers<sp/>for<sp/>all<sp/>access</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>to<sp/>gr_blocks<sp/>(and<sp/>many<sp/>other<sp/>data<sp/>structures).<sp/><sp/>The<sp/>shared_ptr<sp/>gets</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>us<sp/>transparent<sp/>reference<sp/>counting,<sp/>which<sp/>greatly<sp/>simplifies<sp/>storage</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>management<sp/>issues.<sp/><sp/>This<sp/>is<sp/>especially<sp/>helpful<sp/>in<sp/>our<sp/>hybrid</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>C++<sp/>/<sp/>Python<sp/>system.</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>See<sp/>http://www.boost.org/libs/smart_ptr/smart_ptr.htm</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>As<sp/>a<sp/>convention,<sp/>the<sp/>_sptr<sp/>suffix<sp/>indicates<sp/>a<sp/>boost::shared_ptr</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::shared_ptr&lt;ccsds_ticp_frame_source&gt;<sp/><ref refid="ccsds__ticp__frame__source_8h_1a46626f8a3f34bee232e39512d3ae6a77" kindref="member">ccsds_ticp_frame_source_sptr</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><ref refid="api_8h_1a144137922962dd54ae2e8c1917a7e588" kindref="member">CCSDS_API</ref><sp/><ref refid="ccsds__ticp__frame__source_8h_1a46626f8a3f34bee232e39512d3ae6a77" kindref="member">ccsds_ticp_frame_source_sptr</ref><sp/><ref refid="ccsds__ticp__frame__source_8h_1a44adb8c7b9cd978bd7c2ebb6ce767851" kindref="member">ccsds_make_ticp_frame_source</ref>(std::string<sp/>hostname,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>port,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_length,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>data_type,<sp/>std::vector&lt;std::string&gt;<sp/>map_names,<sp/>std::vector&lt;uint8_t&gt;<sp/>map_types,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>frame_rate=0.0);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="classccsds__ticp__frame__source" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="api_8h_1a144137922962dd54ae2e8c1917a7e588" kindref="member">CCSDS_API</ref><sp/><ref refid="classccsds__ticp__frame__source" kindref="compound">ccsds_ticp_frame_source</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>gr_block</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="api_8h_1a144137922962dd54ae2e8c1917a7e588" kindref="member">CCSDS_API</ref><sp/><ref refid="ccsds__ticp__frame__source_8h_1a46626f8a3f34bee232e39512d3ae6a77" kindref="member">ccsds_ticp_frame_source_sptr</ref><sp/><ref refid="ccsds__ticp__frame__source_8h_1a44adb8c7b9cd978bd7c2ebb6ce767851" kindref="member">ccsds_make_ticp_frame_source</ref>(std::string<sp/>hostname,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>port,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_length,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>data_type,<sp/>std::vector&lt;std::string&gt;<sp/>map_names,<sp/>std::vector&lt;uint8_t&gt;<sp/>map_types,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>frame_rate);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classccsds__ticp__frame__source" kindref="compound">ccsds_ticp_frame_source</ref>(std::string<sp/>hostname,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>port,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_length,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>data_type,<sp/>std::vector&lt;std::string&gt;<sp/>map_names,<sp/>std::vector&lt;uint8_t&gt;<sp/>map_types,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>frame_rate=0.0);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d_FRAME_LEN;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>d_DATA_TYPE;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d_FRAME_RATE;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>d_RATE_CONTROL;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>d_TIME_PER_FRAME;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::shared_ptr&lt;<sp/>ticp::Client&lt;ticp::data_v2_t&gt;<sp/>&gt;<sp/>d_ticp_sptr;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;uint8_t,<sp/>std::string&gt;<sp/>d_metadata_map;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeval<sp/>d_rate_time_ref;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d_rate_frame_count;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::mutex<sp/>d_mutex;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>d_stop;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::shared_ptr&lt;boost::thread&gt;<sp/>d_worker_thread;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>TICP_FRAME_SOURCE_DEBUG<sp/>==<sp/>1</highlight></codeline>
<codeline lineno="144"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*dbg_file;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*dbg_file_timing;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dbg_count;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>\brief<sp/>Time<sp/>value<sp/>of<sp/>block<sp/>start.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeval<sp/>dbg_time_start;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="156"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>d_frame_count;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>PROFILE_NUM_SAMPS</highlight></codeline>
<codeline lineno="160"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>profile_count;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="162"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asynchronous_start<sp/>d_astart;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>asynchronous_work(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~<ref refid="classccsds__ticp__frame__source" kindref="compound">ccsds_ticp_frame_source</ref><sp/>();<sp/><sp/></highlight><highlight class="comment">//<sp/>public<sp/>destructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal">};</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>INCLUDED_CCSDS_TICP_FRAME_SOURCE_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_ticp_frame_source.h"/>
  </compounddef>
</doxygen>
