/*
 * Copyright 2023 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(conv_puncturing27.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(82d89db79653343e190355c99f757344)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/ccsds/conv_puncturing27.h>
// pydoc.h is automatically generated in the build directory
#include <conv_puncturing27_pydoc.h>

void bind_conv_puncturing27(py::module& m)
{


    py::module m_conv_puncturing27 = m.def_submodule("conv_puncturing27");


    py::enum_<::gr::ccsds::conv_puncturing27::punct_t>(m_conv_puncturing27, "punct_t")
        .value("NONE", ::gr::ccsds::conv_puncturing27::punct_t::NONE)       // 0
        .value("ECSS_23", ::gr::ccsds::conv_puncturing27::punct_t::ECSS_23) // 1
        .value("ECSS_34", ::gr::ccsds::conv_puncturing27::punct_t::ECSS_34) // 2
        .value("ECSS_56", ::gr::ccsds::conv_puncturing27::punct_t::ECSS_56) // 3
        .value("ECSS_78", ::gr::ccsds::conv_puncturing27::punct_t::ECSS_78) // 4
        .export_values();

    py::implicitly_convertible<int, ::gr::ccsds::conv_puncturing27::punct_t>();


    m_conv_puncturing27.def("get_pattern_len",
                            &::gr::ccsds::conv_puncturing27::get_pattern_len,
                            py::arg("punct"),
                            D(conv_puncturing27, get_pattern_len));


    m_conv_puncturing27.def("get_pattern",
                            &::gr::ccsds::conv_puncturing27::get_pattern,
                            py::arg("punct"),
                            D(conv_puncturing27, get_pattern));
}
