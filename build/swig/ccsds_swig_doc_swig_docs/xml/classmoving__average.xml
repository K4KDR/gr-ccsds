<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classmoving__average" kind="class" prot="public">
    <compoundname>moving_average</compoundname>
    <includes refid="ccsds__moving__average_8h" local="no">ccsds_moving_average.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmoving__average_1ad0ef528bd62c081ceebc2c49b7f34723" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int moving_average::D_NUM_RESET</definition>
        <argsstring></argsstring>
        <name>D_NUM_RESET</name>
        <briefdescription>
<para>Number of samples the active filter should process before it is reset. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_moving_average.h" line="26" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_moving_average.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmoving__average_1a129f205a2a2de65ac0fb0077e904e19c" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int moving_average::D_NUM_COLLECT</definition>
        <argsstring></argsstring>
        <name>D_NUM_COLLECT</name>
        <briefdescription>
<para>Number of samples the inactive filter has to accumulate before it can become active. </para>        </briefdescription>
        <detaileddescription>
<para>The inactive filter starts accumulating when the active filter has processed (moving_average::D_NUM_RESET - moving_average::D_NUM_COLLECT) samples. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_moving_average.h" line="35" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_moving_average.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmoving__average_1a1a3ffc731c74e01c0eec2bc4dc9be792" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double moving_average::freq[2]</definition>
        <argsstring>[2]</argsstring>
        <name>freq</name>
        <briefdescription>
<para>Storage for the states of the two filters. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_moving_average.h" line="38" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_moving_average.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmoving__average_1a34fd5eb3dee6f66e44c5854f25102567" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int moving_average::freq_count[2]</definition>
        <argsstring>[2]</argsstring>
        <name>freq_count</name>
        <briefdescription>
<para>Counter for the number of processed samples of the two filters. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_moving_average.h" line="43" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_moving_average.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmoving__average_1a3b2dbca686d540d3993278797a67aae8" prot="private" static="no" mutable="no">
        <type>double *</type>
        <definition>double* moving_average::act_freq</definition>
        <argsstring></argsstring>
        <name>act_freq</name>
        <briefdescription>
<para>Pointer to the active state value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_moving_average.h" line="46" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_moving_average.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmoving__average_1a1a963d0337046438c3ae714c74281f6f" prot="private" static="no" mutable="no">
        <type>double *</type>
        <definition>double* moving_average::inact_freq</definition>
        <argsstring></argsstring>
        <name>inact_freq</name>
        <briefdescription>
<para>Pointer to the inactive state value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_moving_average.h" line="49" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_moving_average.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmoving__average_1a8232bac2238012d08f92e6439e3227c2" prot="private" static="no" mutable="no">
        <type>unsigned int *</type>
        <definition>unsigned int* moving_average::act_count</definition>
        <argsstring></argsstring>
        <name>act_count</name>
        <briefdescription>
<para>Pointer to the active state counter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_moving_average.h" line="52" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_moving_average.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmoving__average_1aefacd7322136f713e38eaa9c46af1130" prot="private" static="no" mutable="no">
        <type>unsigned int *</type>
        <definition>unsigned int* moving_average::inact_count</definition>
        <argsstring></argsstring>
        <name>inact_count</name>
        <briefdescription>
<para>Pointer to the inactive state counter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_moving_average.h" line="55" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_moving_average.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classmoving__average_1a22234c8ffe3a81722345d7396d612e12" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void moving_average::populate_filter</definition>
        <argsstring>(const float *values, unsigned int n)</argsstring>
        <name>populate_filter</name>
        <param>
          <type>const float *</type>
          <declname>values</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Put array into inactive filter, but do not output filtered states. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>values</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of input values. Must contain at least <computeroutput>n</computeroutput> elements. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of samples to filter.</para></parameterdescription>
</parameteritem>
</parameterlist>
When we just have to filter a block of samples, but don&apos;t need the individual filtered samples, we can update the state in a block, instead of computing every single state individually. <programlisting><codeline><highlight class="normal">x[m+n]<sp/>=<sp/>(<sp/>m<sp/>*<sp/>x[m]<sp/>+<sp/>sum(<sp/>in[0]<sp/>...<sp/>in[n-1])<sp/></highlight></codeline>
</programlisting> with <computeroutput>x</computeroutput>[k] beeing the moving average of k samples. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_moving_average.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmoving__average_1a8912d471b56a492b9767ac6526a08b60" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void moving_average::apply_filter</definition>
        <argsstring>(float *values, unsigned int n)</argsstring>
        <name>apply_filter</name>
        <param>
          <type>float *</type>
          <declname>values</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Put array int active filter and return filtered state for every input element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>values</parametername>
</parameternamelist>
<parameterdescription>
<para>Array with values to filter. The filtered states are written back into this array. Must contain at least <computeroutput>n</computeroutput> elements. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of samples to filter.</para></parameterdescription>
</parameteritem>
</parameterlist>
Filter <computeroutput>n</computeroutput> elements of value and return the <computeroutput>n</computeroutput> filtered values in the same array. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_moving_average.h" line="83" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmoving__average_1a20e086d3879d794e97da61aa499b4864" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>moving_average::moving_average</definition>
        <argsstring>()</argsstring>
        <name>moving_average</name>
        <briefdescription>
<para>Public constructor of the dual moving average filter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_moving_average.h" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmoving__average_1a47424d740793b49f43f9be4ef4ca19ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>moving_average::~moving_average</definition>
        <argsstring>()</argsstring>
        <name>~moving_average</name>
        <briefdescription>
<para>Public destructor of the dual moving average filter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_moving_average.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmoving__average_1a2735f548baed9086744d12f323613ab2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void moving_average::filter</definition>
        <argsstring>(float *values, const unsigned int n)</argsstring>
        <name>filter</name>
        <param>
          <type>float *</type>
          <declname>values</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Filter a block of values and take care of the filter switching internally. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>values</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of values to filter. The filtered values are returned in this array. Must contain at least <computeroutput>n</computeroutput> elements. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of values to filter.</para></parameterdescription>
</parameteritem>
</parameterlist>
Filter array and take care of the filter switching and populating internally. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_moving_average.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmoving__average_1ae9a8f51e61b99c458c18ed589635b4bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float moving_average::getState</definition>
        <argsstring>()</argsstring>
        <name>getState</name>
        <briefdescription>
<para>Return current state (i.e. the current moving average) </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Return current state *(moving_average::act_freq) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_moving_average.h" line="108" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Moving average filter</para><para>A dual moving average filter. The filter calculates the moving average of an input sequence. In order to not accumulate numerical computation errors the filter is reset after processing moving_average::D_NUM_RESET samples. A second (inactive) moving average filter starts to filter the input stream in parallel moving_average::D_NUM_COLLECT samples before the first (active) filter is reset. </para>    </briefdescription>
    <detaileddescription>
<para>The filtered output is always taken from the active filter.</para><para>When the active filter is reset, the inactive filter has filtered exactly moving_average::D_NUM_COLLECT samples and becomes active while the previously active filter becomes inactive. </para>    </detaileddescription>
    <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_moving_average.h" line="21" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_moving_average.h" bodystart="20" bodyend="109"/>
    <listofallmembers>
      <member refid="classmoving__average_1a8232bac2238012d08f92e6439e3227c2" prot="private" virt="non-virtual"><scope>moving_average</scope><name>act_count</name></member>
      <member refid="classmoving__average_1a3b2dbca686d540d3993278797a67aae8" prot="private" virt="non-virtual"><scope>moving_average</scope><name>act_freq</name></member>
      <member refid="classmoving__average_1a8912d471b56a492b9767ac6526a08b60" prot="private" virt="non-virtual"><scope>moving_average</scope><name>apply_filter</name></member>
      <member refid="classmoving__average_1a129f205a2a2de65ac0fb0077e904e19c" prot="private" virt="non-virtual"><scope>moving_average</scope><name>D_NUM_COLLECT</name></member>
      <member refid="classmoving__average_1ad0ef528bd62c081ceebc2c49b7f34723" prot="private" virt="non-virtual"><scope>moving_average</scope><name>D_NUM_RESET</name></member>
      <member refid="classmoving__average_1a2735f548baed9086744d12f323613ab2" prot="public" virt="non-virtual"><scope>moving_average</scope><name>filter</name></member>
      <member refid="classmoving__average_1a1a3ffc731c74e01c0eec2bc4dc9be792" prot="private" virt="non-virtual"><scope>moving_average</scope><name>freq</name></member>
      <member refid="classmoving__average_1a34fd5eb3dee6f66e44c5854f25102567" prot="private" virt="non-virtual"><scope>moving_average</scope><name>freq_count</name></member>
      <member refid="classmoving__average_1ae9a8f51e61b99c458c18ed589635b4bb" prot="public" virt="non-virtual"><scope>moving_average</scope><name>getState</name></member>
      <member refid="classmoving__average_1aefacd7322136f713e38eaa9c46af1130" prot="private" virt="non-virtual"><scope>moving_average</scope><name>inact_count</name></member>
      <member refid="classmoving__average_1a1a963d0337046438c3ae714c74281f6f" prot="private" virt="non-virtual"><scope>moving_average</scope><name>inact_freq</name></member>
      <member refid="classmoving__average_1a20e086d3879d794e97da61aa499b4864" prot="public" virt="non-virtual"><scope>moving_average</scope><name>moving_average</name></member>
      <member refid="classmoving__average_1a22234c8ffe3a81722345d7396d612e12" prot="private" virt="non-virtual"><scope>moving_average</scope><name>populate_filter</name></member>
      <member refid="classmoving__average_1a47424d740793b49f43f9be4ef4ca19ab" prot="public" virt="non-virtual"><scope>moving_average</scope><name>~moving_average</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
