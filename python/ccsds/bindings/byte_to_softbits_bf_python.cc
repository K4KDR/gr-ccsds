/*
 * Copyright 2023 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(byte_to_softbits_bf.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(119bf42027d9a4e9cde9e211fa419e95)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/ccsds/byte_to_softbits_bf.h>
// pydoc.h is automatically generated in the build directory
#include <byte_to_softbits_bf_pydoc.h>

void bind_byte_to_softbits_bf(py::module& m)
{

    using byte_to_softbits_bf = ::gr::ccsds::byte_to_softbits_bf;


    py::class_<byte_to_softbits_bf,
               gr::sync_interpolator,
               std::shared_ptr<byte_to_softbits_bf>>(
        m, "byte_to_softbits_bf", D(byte_to_softbits_bf))

        .def(py::init(&byte_to_softbits_bf::make),
             py::arg("initial_n0"),
             D(byte_to_softbits_bf, make))


        ;
}
