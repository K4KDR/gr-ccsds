/*
 * Copyright 2023 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(mpsk_ambiguity_resolver_f.h) */
/* BINDTOOL_HEADER_FILE_HASH(cb98b31065209053c861ad8a019be7b8)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/ccsds/mpsk_ambiguity_resolver_f.h>
// pydoc.h is automatically generated in the build directory
#include <mpsk_ambiguity_resolver_f_pydoc.h>

void bind_mpsk_ambiguity_resolver_f(py::module& m)
{

    using mpsk_ambiguity_resolver_f = ::gr::ccsds::mpsk_ambiguity_resolver_f;
    py::enum_<::gr::ccsds::ambiguity_verbosity_t>(m, "ambiguity_verbosity_t")
        .value("AR_OUTPUT_NONE", ::gr::ccsds::ambiguity_verbosity_t::AR_OUTPUT_NONE) // 0
        .value("AR_OUTPUT_CHANGE",
               ::gr::ccsds::ambiguity_verbosity_t::AR_OUTPUT_CHANGE) // 1
        .value("AR_OUTPUT_STATE",
               ::gr::ccsds::ambiguity_verbosity_t::AR_OUTPUT_STATE) // 2
        .value("AR_OUTPUT_DEBUG",
               ::gr::ccsds::ambiguity_verbosity_t::AR_OUTPUT_DEBUG) // 3
        .export_values();

    py::implicitly_convertible<int, ::gr::ccsds::ambiguity_verbosity_t>();


    py::class_<mpsk_ambiguity_resolver_f,
               gr::block,
               gr::basic_block,
               std::shared_ptr<mpsk_ambiguity_resolver_f>>(
        m, "mpsk_ambiguity_resolver_f", D(mpsk_ambiguity_resolver_f))

        .def(py::init(&mpsk_ambiguity_resolver_f::make),
             py::arg("M"),
             py::arg("ASM"),
             py::arg("asm_len"),
             py::arg("threshold"),
             py::arg("correlation_threshold"),
             py::arg("frame_length"),
             py::arg("num_tail_syms") = 0,
             py::arg("verbosity") = ::gr::ccsds::ambiguity_verbosity_t::AR_OUTPUT_NONE,
             D(mpsk_ambiguity_resolver_f, make))


        .def("get_correlation",
             &mpsk_ambiguity_resolver_f::get_correlation,
             D(mpsk_ambiguity_resolver_f, get_correlation))

        ;
}
