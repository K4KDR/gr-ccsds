# auto-generated by grc.converter

id: ccsds_doppler_correction_cc_file
label: Doppler correction from file (C++)
category: '[ccsds]'

parameters:
-   id: tle_filename
    label: TLE file
    dtype: string
-   id: tle_satname
    label: Satellite name (in TLE)
    dtype: string
-   id: lla
    label: GS location
    dtype: raw
    default: (48.266278, 11.668361, 545.0)
-   id: frequency
    label: Centre frequency
    dtype: real
-   id: sampl_rate
    label: Sampling rate
    dtype: real
    default: samp_rate
-   id: t_update
    label: Update time
    dtype: real
    default: '0.1'
-   id: blocksize
    label: Blocksize
    dtype: real
    default: '2048'

inputs:
-   domain: stream
    dtype: complex

outputs:
-   domain: stream
    dtype: complex

templates:
    imports: import gnuradio.ccsds as ccsds
    make: ccsds.doppler_correction_cc(ccsds.util.getTleFromFile(${tle_filename}, ${tle_satname}),
        ${sampl_rate}, ${t_update}, ${frequency}, ${lla}, ${blocksize})

documentation: "Shift input signal in order to compensate an anticipated Doppler shift\
    \ on the given centre frequency as computed by the given TLE and the given ground\
    \ station location.\n\nThe Doppler shift correction is performed in a phase-continuous\
    \ manner. The Doppler shift is computed with\nf_d(t) = f_0/c range_rate(t)\nwhere\
    \ f_0 is the centre frequency, c is the speed of light and range_rate is the relative\
    \ velocity of the satellite towards the ground station (in an ECI frame) which\
    \ is obtained by taking the time derivative of the range (distance) between the\
    \ satellite and the ground station.\n\nThe phase of each sample is offset by 2pi*\
    \ \\int_0^t f_d(\\tau) d\\tau = 2pi*f_0/c int_0^t range_rate(\\tau) d\\tau = 2pi*f_0/c\
    \ (range(t) - range(0))\nrange(0) is the computed range at the start of the block\
    \ and range(t) is the computed range for the sample that corresponds to time t.\n\
    \nThe ranges are computed from the TLE every t_u seconds. The ranges for the samples\
    \ in between are computed by linear interpolation between the two neighbouring\
    \ time points for which a range has been computed.\n\nThe blocks parameters are:\n\
    \  TLE file: Path to a TLE file to look for the orbital elements\n\n  Satellite\
    \ name (in TLE): Name of the satellite in the TLE file.\n\n  GS location: Location\
    \ of the ground station as a tuple of length 3 containing the latitude in degrees\
    \ (positive for northern hemisphere), longitude in degrees (positive for locations\
    \ east of Grenwich) and altitude in metre (above the WGS-72 ellipsoid).\n\n  Centre\
    \ frequency: Nominal frequency f_0 of the signal to scale the Doppler shift correction.\n\
    \n  Sampling rate: The sampling rate of the input (and output) signal in Hz. The\
    \ inverse of this number gives the time in seconds between two samples.\n  \n\
    \  Update time: Compute a new range from the orbital elements every update_time\
    \ seconds.\n  \n  Block length: Process the samples in blocks of this length.\
    \ A higher block length increases the computation efficiency, but also increases\
    \ the memory requirements (16*block_len Bytes) and the output latency (block_len/samp_rate\
    \ seconds)."

file_format: 1
