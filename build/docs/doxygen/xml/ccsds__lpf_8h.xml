<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="ccsds__lpf_8h" kind="file">
    <compoundname>ccsds_lpf.h</compoundname>
    <includes local="no">stdio.h</includes>
    <includedby refid="ccsds__fll__cc_8h" local="no">ccsds_fll_cc.h</includedby>
    <incdepgraph>
      <node id="260">
        <label>ccsds_lpf.h</label>
        <link refid="ccsds_lpf.h"/>
        <childnode refid="261" relation="include">
        </childnode>
      </node>
      <node id="261">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="263">
        <label>ccsds_fll_cc.h</label>
        <link refid="ccsds__fll__cc_8h"/>
      </node>
      <node id="262">
        <label>ccsds_lpf.h</label>
        <link refid="ccsds_lpf.h"/>
        <childnode refid="263" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classlpf" prot="public">lpf</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="ccsds__lpf_8h_1ab52f34dd4c355289f36e323a9d443e04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlpf" kindref="compound">lpf</ref> *</type>
        <definition>lpf* ccsds_make_lpf</definition>
        <argsstring>(float loop_bw)</argsstring>
        <name>ccsds_make_lpf</name>
        <param>
          <type>float</type>
          <declname>loop_bw</declname>
        </param>
        <briefdescription>
<para>Create a linear first order low pass filter and return it&apos;s shared pointer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loop_bw</parametername>
</parameternamelist>
<parameterdescription>
<para>Bandwidth of the loop, which determins the loop stepsize. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Shared pointer to the created filter.</para></simplesect>
Based on the loop bandwidth the filter stepsize alpha is calculated with: [<ref refid="page_bibliography_1bib_mengali" kindref="member">Mengali &amp; D&apos;Andrea</ref> p. 126 (3.5.67)] <programlisting><codeline><highlight class="normal">alpha<sp/>=<sp/>4<sp/>*<sp/>loop_bw<sp/></highlight></codeline>
</programlisting></para><para>The k-th filtered state x from the inputs y is calculated as <programlisting><codeline><highlight class="normal">x[k]<sp/>=<sp/>(1-alpha)<sp/>*<sp/>x[k-1]<sp/>+<sp/>alpha<sp/>*<sp/>y[k]<sp/></highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_lpf.h" line="21" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_lpf.h"/>
  </compounddef>
</doxygen>
