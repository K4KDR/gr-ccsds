# auto-generated by grc.converter

id: ccsds_conv_encode27_bb
label: Convolutional Encoder (CCSDS)
category: CCSDS/Channelcoding

parameters:
-   id: gen_poly_c1
    label: Generator Polynom C1
    dtype: int
    default: '0x79'
-   id: gen_poly_c2
    label: Generator Polynom C2
    dtype: int
    default: '0xDB'
-   id: punct
    label: Puncturing
    dtype: enum
    default: '0'
    options: [NONE, ECSS_23, ECSS_34, ECSS_56, ECSS_78]
    option_labels: [None, ECSS 2/3, ECSS 3/4, ECSS 5/6, ECSS 7/8]
    option_attributes:
        fcn: ['0', '1', '2', '3', '4']

inputs:
-   domain: stream
    dtype: byte

outputs:
-   domain: stream
    dtype: byte
asserts:
- ${ gen_poly_c1 >= 0 }
- ${ gen_poly_c2 >= 0 }
- ${ gen_poly_c1 <= 255 }
- ${ gen_poly_c2 <= 255 }

templates:
    imports: import ccsds
    make: ccsds.conv_encode27_bb(${gen_poly_c1}, ${gen_poly_c2}, int(${punct.fcn}))

documentation: |-
    Convolutional Encoder with puncturing

    Convolutional encodes incomming (packed) bytes and perform puncturing.

    The compact generator polynom contains two informations. Encoded in the MSB is
    the information whether the stream should be inverted (MSB set) or not (MSB
    unset). Encoded in the 7 less significant bits is the information about the
    connections between the shift registers and the output. The MSB-1 represents the
    influence of the current information bit i(t) while the LSB represents the
    influence of the information bit i(t-6). A set bit means there is a connection,
    while an unset bit means there is no.

    The polynomials for the convolutional code defined in ECSS can be generated with
    0x79 for c1 and 0x5B for c2. Together with the MSB for the inversion of c2 the
    compact polynomials are 0x79 and 0xDB for non puncturing. For puncturing, the
    inversion is not performed, so the compact generator polynomials are 0x79 for c1
    and 0x5B for c2.

file_format: 1
