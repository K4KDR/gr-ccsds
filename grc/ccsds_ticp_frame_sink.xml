<?xml version="1.0"?>
<block>
  <name>TICP Frame Sink</name>
  <key>ccsds_ticp_frame_sink</key>
  <category>CCSDS/TICP</category>
  <import>import ccsds</import>
  <make>ccsds.ticp_frame_sink($port, $frame_len, $data_type, $mapping.values(), $mapping.keys())</make>
	<param>
		<name>Port</name>
		<key>port</key>
		<value>1739</value>
		<type>int</type>
	</param>
	<param>
		<name>Frame Length</name>
		<key>frame_len</key>
		<value>44</value>
		<type>int</type>
	</param>
	<param>
		<name>Data type</name>
		<key>data_type</key>
		<value>0</value>
		<type>int</type>
	</param>
	<param>
		<name>Metadata mapping</name>
		<key>mapping</key>
		<value>{}</value>
		<type>raw</type>
	</param>
	<check>$port >= 1</check>
	<check>$frame_len >= 1</check>
	<check>$data_type >= 0</check>
	<check>$data_type &lt;= 255</check>
	<check>isinstance($mapping, dict)</check>
	<check>len($mapping.values()) == len(set($mapping.values()))</check>
	<check>$data_type not in $mapping.values()</check>
	<sink>
		<name>in</name>
		<type>message</type>
	</sink>
	<doc>
TICP Frame sink

TICP server that outputs a frame from a message queue to a TICP client

Port: Port on which the TICP Server is listening

Frame Length: Number of bytes per frame.

Data type: Type of the dataset which's data should be used for the actuall
output data. (All other types might be used as metadata)

Metadata mapping: Mapping of the TICPv2 types to a string that will be used in
the PDU header dictionary. This field is supposed to be a python dictionary
containing the mapping of all names to types that should be used for metadata.
All values in this dict must be unique and the Data type specified above may not
occur in the dict's values.
An example: If Data type is zero: {rx_timestamp=1, rs_check=2} will add the
datasets of type 1 and 2 to the PDU header.

Max. Frame rate: Maximum number of frames per second to request. If set to 0.0,
no rate limitation will be applied.
	</doc>
</block>
