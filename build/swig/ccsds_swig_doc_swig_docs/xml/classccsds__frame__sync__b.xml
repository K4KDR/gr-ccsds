<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classccsds__frame__sync__b" kind="class" prot="public">
    <compoundname>ccsds_frame_sync_b</compoundname>
    <basecompoundref prot="public" virt="non-virtual">gr_block</basecompoundref>
    <includes refid="ccsds__frame__sync__b_8h" local="no">ccsds_frame_sync_b.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="classccsds__frame__sync__b_1a70c0b994791e82fb1b9158d60ce253e5" prot="private" static="no">
        <name>d_STATE</name>
        <enumvalue id="classccsds__frame__sync__b_1a70c0b994791e82fb1b9158d60ce253e5a471e24a47df07cf377a519b8b4c2e665" prot="private">
          <name>STATE_SEARCH</name>
          <initializer>=0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classccsds__frame__sync__b_1a70c0b994791e82fb1b9158d60ce253e5aee828c60d51dee6fecdf676e36fd0266" prot="private">
          <name>STATE_LOCK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumerator for the two different states. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_frame_sync_b.h" line="106" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_frame_sync_b.h" bodystart="106" bodyend="108"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classccsds__frame__sync__b_1ac4507fbc08a66e8f196863bd475da0e5" prot="private" static="no" mutable="no">
        <type>d_STATE</type>
        <definition>d_STATE ccsds_frame_sync_b::d_state</definition>
        <argsstring></argsstring>
        <name>d_state</name>
        <briefdescription>
<para>State variable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_frame_sync_b.h" line="111" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_frame_sync_b.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classccsds__frame__sync__b_1a7d597a0afbf3ed6b008c847515987244" prot="private" static="no" mutable="no">
        <type><ref refid="classccsds__asm__operator" kindref="compound">ccsds_asm_operator</ref>*</type>
        <definition>ccsds_asm_operator* ccsds_frame_sync_b::d_asm_operator</definition>
        <argsstring></argsstring>
        <name>d_asm_operator</name>
        <briefdescription>
<para>Helper class to operate on the ASM stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_frame_sync_b.h" line="114" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_frame_sync_b.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classccsds__frame__sync__b_1af73c9fafb6ec489ad91942178885546a" prot="private" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int ccsds_frame_sync_b::d_ASM_LEN</definition>
        <argsstring></argsstring>
        <name>d_ASM_LEN</name>
        <briefdescription>
<para>Length of ASM in bytes. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classccsds__asm__operator" kindref="compound">ccsds_asm_operator</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_frame_sync_b.h" line="120" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_frame_sync_b.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classccsds__frame__sync__b_1a9e836f637569314829218d8869f1de5d" prot="private" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int ccsds_frame_sync_b::d_THRESHOLD</definition>
        <argsstring></argsstring>
        <name>d_THRESHOLD</name>
        <briefdescription>
<para>Number of ASM losses to enter full search again. If set to one, a full search is performed every time an ASM is lost. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_frame_sync_b.h" line="125" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_frame_sync_b.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classccsds__frame__sync__b_1a766f31e8ebb2dd7185c454486fdddafb" prot="private" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int ccsds_frame_sync_b::d_BER_THRESHOLD</definition>
        <argsstring></argsstring>
        <name>d_BER_THRESHOLD</name>
        <briefdescription>
<para>Maximum number of bit errors that may occur between a sequence and the ASM to still consider the sequence as an ASM. If set to zero, sequence must match the ASM exactly. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_frame_sync_b.h" line="131" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_frame_sync_b.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classccsds__frame__sync__b_1a0a2834c03b913baa20ac042b33a3782e" prot="private" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int ccsds_frame_sync_b::d_FRAME_LEN</definition>
        <argsstring></argsstring>
        <name>d_FRAME_LEN</name>
        <briefdescription>
<para>Length of a frame (without ASM) in bytes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_frame_sync_b.h" line="134" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_frame_sync_b.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classccsds__frame__sync__b_1aa5bc4eef58dd5f5f221b2a1c4c2f23c1" prot="private" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int ccsds_frame_sync_b::d_SEARCH_LEN</definition>
        <argsstring></argsstring>
        <name>d_SEARCH_LEN</name>
        <briefdescription>
<para>Number of bytes needed for a search. </para>        </briefdescription>
        <detaileddescription>
<para>In order to catch at least one complete ASM (if there is one) we need this many bytes. Worst case: The ASM started one bit before our current observation interval. In this case the next ASM starts in the last bit of the d_ASM_LEN+d_FRAME_LEN byte and we need another d_ASM_LEN byte to catch the complete ASM (and the first byte of the following frame) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_frame_sync_b.h" line="145" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_frame_sync_b.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classccsds__frame__sync__b_1a95d97b7c19491ce77b6fbedea9e85cab" prot="private" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int ccsds_frame_sync_b::d_COPY_LEN</definition>
        <argsstring></argsstring>
        <name>d_COPY_LEN</name>
        <briefdescription>
<para>Number of bytes that are copied to output stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_frame_sync_b.h" line="148" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_frame_sync_b.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classccsds__frame__sync__b_1ae3d441c7eaa4e3404295a549bde20a0c" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int ccsds_frame_sync_b::d_count</definition>
        <argsstring></argsstring>
        <name>d_count</name>
        <briefdescription>
<para>Counter variable on how many ASMs have been observed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_frame_sync_b.h" line="151" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_frame_sync_b.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classccsds__frame__sync__b_1af606f8cad6404d8cc24daaae967d4597" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int ccsds_frame_sync_b::d_offset_bytes</definition>
        <argsstring></argsstring>
        <name>d_offset_bytes</name>
        <briefdescription>
<para>Byte index of the next expected ASM if locked. If in search state this variable may contain anything. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>d_state </para><simplesectsep/><para>d_offset_bits </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_frame_sync_b.h" line="159" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_frame_sync_b.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classccsds__frame__sync__b_1a49cfa2e83b59e3a92a7012a2ab2d81b8" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int ccsds_frame_sync_b::d_offset_bits</definition>
        <argsstring></argsstring>
        <name>d_offset_bits</name>
        <briefdescription>
<para>Bit index of the next expected ASM in the byte indicated by d_offset_byte if in lock state. If in search state this variable may contain anything. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>d_state </para><simplesectsep/><para>d_offset_bytes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_frame_sync_b.h" line="168" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_frame_sync_b.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classccsds__frame__sync__b_1a99129c5c5d7d8dd39db2ebe088ea389e" prot="private" static="no" mutable="no">
        <type>FILE *</type>
        <definition>FILE* ccsds_frame_sync_b::dbg_file_in</definition>
        <argsstring></argsstring>
        <name>dbg_file_in</name>
        <briefdescription>
<para>File pointer for debugging. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_frame_sync_b.h" line="172" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_frame_sync_b.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classccsds__frame__sync__b_1a1f7ce3f1655f26503640675b8a732dea" prot="private" static="no" mutable="no">
        <type>FILE *</type>
        <definition>FILE* ccsds_frame_sync_b::dbg_file_instream</definition>
        <argsstring></argsstring>
        <name>dbg_file_instream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_frame_sync_b.h" line="173" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_frame_sync_b.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classccsds__frame__sync__b_1a940d75569f3f4ed8e0239b90d87f6157" prot="private" static="no" mutable="no">
        <type>FILE *</type>
        <definition>FILE* ccsds_frame_sync_b::dbg_file_out</definition>
        <argsstring></argsstring>
        <name>dbg_file_out</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_frame_sync_b.h" line="174" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_frame_sync_b.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classccsds__frame__sync__b_1aa3de250601cdeab6adbaeb5011eed5ba" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int ccsds_frame_sync_b::dbg_count</definition>
        <argsstring></argsstring>
        <name>dbg_count</name>
        <briefdescription>
<para>Counter for debugging. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_frame_sync_b.h" line="177" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_frame_sync_b.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classccsds__frame__sync__b_1a0063ad28193037f52d6c96c78aa28134" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend __GR_ATTR_IMPORT <ref refid="ccsds__frame__sync__b_8h_1a99eaa4db4db6a4a03b4ca6a4143b1a45" kindref="member">ccsds_frame_sync_b_sptr</ref></type>
        <definition>__GR_ATTR_IMPORT ccsds_frame_sync_b_sptr ccsds_make_frame_sync_b</definition>
        <argsstring>(std::string ASM, unsigned int threshold, const unsigned int ber_threshold, const unsigned int frame_length)</argsstring>
        <name>ccsds_make_frame_sync_b</name>
        <param>
          <type>std::string</type>
          <declname>ASM</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>threshold</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>ber_threshold</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>frame_length</declname>
        </param>
        <briefdescription>
<para>Return a shared_ptr to a new instance of <ref refid="classccsds__frame__sync__b" kindref="compound">ccsds_frame_sync_b</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Create an instance of <ref refid="classccsds__frame__sync__b" kindref="compound">ccsds_frame_sync_b</ref> and return it&apos;s shared_ptr.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ASM</parametername>
</parameternamelist>
<parameterdescription>
<para>String containing the attached sync marker to look for in hexadecimal representation. Must be of even length. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>threshold</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of ASM losses to enter full search again. If set to one, a full search is performed every time an ASM is lost. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ber_threshold</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of bit errors between a sequence and the ASM to consider the sequence matching. If threshold equals zero the sequence must be an exact copy of the ASM. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frame_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of a frame (without ASM) in bytes. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Shared pointer to the created AR block </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_frame_sync_b.h" line="83" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classccsds__frame__sync__b_1a223349d0182f85d7b3c9b74ca5438741" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ccsds_frame_sync_b::ccsds_frame_sync_b</definition>
        <argsstring>(std::string ASM, unsigned int threshold, const unsigned int ber_threshold, const unsigned int frame_length)</argsstring>
        <name>ccsds_frame_sync_b</name>
        <param>
          <type>std::string</type>
          <declname>ASM</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>threshold</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>ber_threshold</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>frame_length</declname>
        </param>
        <briefdescription>
<para>Private constructor of the frame synchronizer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ASM</parametername>
</parameternamelist>
<parameterdescription>
<para>String containing the attached sync marker to look for in hexadecimal representation. Must be of even length. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>threshold</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of ASM losses to enter full search again. If set to one, a full search is performed every time an ASM is lost. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ber_threshold</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of bit errors between a sequence and the ASM to consider the sequence matching. If threshold equals zero the sequence must be an exact copy of the ASM. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frame_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of a frame (without ASM) in bytes.</para></parameterdescription>
</parameteritem>
</parameterlist>
Constructs a Frame sync block that searches for the ASM in the input streams and outputs an asynchronous message with the <computeroutput>d_FRAME_LEN</computeroutput> bytes after the ASM. If no ASM is is found, no message is created. This block consumes the ASM in the output message.</para><para>The input of this block is copied one-to-one to the output stream. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_frame_sync_b.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classccsds__frame__sync__b_1a355516ff91ff537a74a8a32328de1408" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int ccsds_frame_sync_b::get_bytes_required</definition>
        <argsstring>(void)</argsstring>
        <name>get_bytes_required</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Calculates how many input bytes are needed to check for a known ASM position. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>d_ASM_LEN+d_FRAME_LEN</computeroutput> if <computeroutput>d_offset_bits</computeroutput> is zero, otherwise <computeroutput>d_ASM_LEN+d_FRAME_LEN+1</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_frame_sync_b.h" line="186" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classccsds__frame__sync__b_1a47106c38ec73df3a76c412cd753bffb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ccsds_frame_sync_b::~ccsds_frame_sync_b</definition>
        <argsstring>()</argsstring>
        <name>~ccsds_frame_sync_b</name>
        <briefdescription>
<para>Public deconstructor of the FS. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_frame_sync_b.h" line="191" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classccsds__frame__sync__b_1ab38632691b26f033e574e0e358b4a87a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ccsds_frame_sync_b::forecast</definition>
        <argsstring>(int noutput_items, gr_vector_int &amp;ninput_items_required)</argsstring>
        <name>forecast</name>
        <param>
          <type>int</type>
          <declname>noutput_items</declname>
        </param>
        <param>
          <type>gr_vector_int &amp;</type>
          <declname>ninput_items_required</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_frame_sync_b.h" line="193" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classccsds__frame__sync__b_1a920103268e4029dcbe797247fb59d667" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ccsds_frame_sync_b::stop</definition>
        <argsstring>(void)</argsstring>
        <name>stop</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_frame_sync_b.h" line="195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classccsds__frame__sync__b_1a41684a02c5c0768f609727f18ae9e27b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ccsds_frame_sync_b::general_work</definition>
        <argsstring>(int noutput_items, gr_vector_int &amp;ninput_items, gr_vector_const_void_star &amp;input_items, gr_vector_void_star &amp;output_items)</argsstring>
        <name>general_work</name>
        <param>
          <type>int</type>
          <declname>noutput_items</declname>
        </param>
        <param>
          <type>gr_vector_int &amp;</type>
          <declname>ninput_items</declname>
        </param>
        <param>
          <type>gr_vector_const_void_star &amp;</type>
          <declname>input_items</declname>
        </param>
        <param>
          <type>gr_vector_void_star &amp;</type>
          <declname>output_items</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_frame_sync_b.h" line="197" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Take the input streams and look for an ASM. </para>    </briefdescription>
    <detaileddescription>
<para>The block will start in searchmode, looking for every possible bit and byte offset. Once an ASM is found it will enter locked state where it will only check for the ASM at the expected position. If the ASM is found a counter is increased up to <computeroutput>d_THRESHOLD</computeroutput>. If an exprected ASM is not found the counter is decreased. If the counter reaches zero the block goes into search mode again.</para><para>If the block finds an ASM it will create an asynchronous message containing the <computeroutput>frame_length</computeroutput> bytes after the ASM. The input stream is copied the output stream in any case. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="66">
        <label>ccsds_frame_sync_b</label>
        <link refid="classccsds__frame__sync__b"/>
        <childnode refid="67" relation="public-inheritance">
        </childnode>
      </node>
      <node id="67">
        <label>gr_block</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="68">
        <label>ccsds_frame_sync_b</label>
        <link refid="classccsds__frame__sync__b"/>
        <childnode refid="69" relation="public-inheritance">
        </childnode>
      </node>
      <node id="69">
        <label>gr_block</label>
      </node>
    </collaborationgraph>
    <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_frame_sync_b.h" line="81" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_frame_sync_b.h" bodystart="80" bodyend="200"/>
    <listofallmembers>
      <member refid="classccsds__frame__sync__b_1a223349d0182f85d7b3c9b74ca5438741" prot="private" virt="non-virtual"><scope>ccsds_frame_sync_b</scope><name>ccsds_frame_sync_b</name></member>
      <member refid="classccsds__frame__sync__b_1a0063ad28193037f52d6c96c78aa28134" prot="private" virt="non-virtual"><scope>ccsds_frame_sync_b</scope><name>ccsds_make_frame_sync_b</name></member>
      <member refid="classccsds__frame__sync__b_1af73c9fafb6ec489ad91942178885546a" prot="private" virt="non-virtual"><scope>ccsds_frame_sync_b</scope><name>d_ASM_LEN</name></member>
      <member refid="classccsds__frame__sync__b_1a7d597a0afbf3ed6b008c847515987244" prot="private" virt="non-virtual"><scope>ccsds_frame_sync_b</scope><name>d_asm_operator</name></member>
      <member refid="classccsds__frame__sync__b_1a766f31e8ebb2dd7185c454486fdddafb" prot="private" virt="non-virtual"><scope>ccsds_frame_sync_b</scope><name>d_BER_THRESHOLD</name></member>
      <member refid="classccsds__frame__sync__b_1a95d97b7c19491ce77b6fbedea9e85cab" prot="private" virt="non-virtual"><scope>ccsds_frame_sync_b</scope><name>d_COPY_LEN</name></member>
      <member refid="classccsds__frame__sync__b_1ae3d441c7eaa4e3404295a549bde20a0c" prot="private" virt="non-virtual"><scope>ccsds_frame_sync_b</scope><name>d_count</name></member>
      <member refid="classccsds__frame__sync__b_1a0a2834c03b913baa20ac042b33a3782e" prot="private" virt="non-virtual"><scope>ccsds_frame_sync_b</scope><name>d_FRAME_LEN</name></member>
      <member refid="classccsds__frame__sync__b_1a49cfa2e83b59e3a92a7012a2ab2d81b8" prot="private" virt="non-virtual"><scope>ccsds_frame_sync_b</scope><name>d_offset_bits</name></member>
      <member refid="classccsds__frame__sync__b_1af606f8cad6404d8cc24daaae967d4597" prot="private" virt="non-virtual"><scope>ccsds_frame_sync_b</scope><name>d_offset_bytes</name></member>
      <member refid="classccsds__frame__sync__b_1aa5bc4eef58dd5f5f221b2a1c4c2f23c1" prot="private" virt="non-virtual"><scope>ccsds_frame_sync_b</scope><name>d_SEARCH_LEN</name></member>
      <member refid="classccsds__frame__sync__b_1ac4507fbc08a66e8f196863bd475da0e5" prot="private" virt="non-virtual"><scope>ccsds_frame_sync_b</scope><name>d_state</name></member>
      <member refid="classccsds__frame__sync__b_1a70c0b994791e82fb1b9158d60ce253e5" prot="private" virt="non-virtual"><scope>ccsds_frame_sync_b</scope><name>d_STATE</name></member>
      <member refid="classccsds__frame__sync__b_1a9e836f637569314829218d8869f1de5d" prot="private" virt="non-virtual"><scope>ccsds_frame_sync_b</scope><name>d_THRESHOLD</name></member>
      <member refid="classccsds__frame__sync__b_1aa3de250601cdeab6adbaeb5011eed5ba" prot="private" virt="non-virtual"><scope>ccsds_frame_sync_b</scope><name>dbg_count</name></member>
      <member refid="classccsds__frame__sync__b_1a99129c5c5d7d8dd39db2ebe088ea389e" prot="private" virt="non-virtual"><scope>ccsds_frame_sync_b</scope><name>dbg_file_in</name></member>
      <member refid="classccsds__frame__sync__b_1a1f7ce3f1655f26503640675b8a732dea" prot="private" virt="non-virtual"><scope>ccsds_frame_sync_b</scope><name>dbg_file_instream</name></member>
      <member refid="classccsds__frame__sync__b_1a940d75569f3f4ed8e0239b90d87f6157" prot="private" virt="non-virtual"><scope>ccsds_frame_sync_b</scope><name>dbg_file_out</name></member>
      <member refid="classccsds__frame__sync__b_1ab38632691b26f033e574e0e358b4a87a" prot="public" virt="non-virtual"><scope>ccsds_frame_sync_b</scope><name>forecast</name></member>
      <member refid="classccsds__frame__sync__b_1a41684a02c5c0768f609727f18ae9e27b" prot="public" virt="non-virtual"><scope>ccsds_frame_sync_b</scope><name>general_work</name></member>
      <member refid="classccsds__frame__sync__b_1a355516ff91ff537a74a8a32328de1408" prot="private" virt="non-virtual"><scope>ccsds_frame_sync_b</scope><name>get_bytes_required</name></member>
      <member refid="classccsds__frame__sync__b_1a70c0b994791e82fb1b9158d60ce253e5aee828c60d51dee6fecdf676e36fd0266" prot="private" virt="non-virtual"><scope>ccsds_frame_sync_b</scope><name>STATE_LOCK</name></member>
      <member refid="classccsds__frame__sync__b_1a70c0b994791e82fb1b9158d60ce253e5a471e24a47df07cf377a519b8b4c2e665" prot="private" virt="non-virtual"><scope>ccsds_frame_sync_b</scope><name>STATE_SEARCH</name></member>
      <member refid="classccsds__frame__sync__b_1a920103268e4029dcbe797247fb59d667" prot="public" virt="non-virtual"><scope>ccsds_frame_sync_b</scope><name>stop</name></member>
      <member refid="classccsds__frame__sync__b_1a47106c38ec73df3a76c412cd753bffb2" prot="public" virt="non-virtual"><scope>ccsds_frame_sync_b</scope><name>~ccsds_frame_sync_b</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
