/*
 * Copyright 2023 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(soft_to_hard_message.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(b4d3e52c168fbbac6f8ad094a1d9f00c)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/ccsds/soft_to_hard_message.h>
// pydoc.h is automatically generated in the build directory
#include <soft_to_hard_message_pydoc.h>

void bind_soft_to_hard_message(py::module& m)
{

    using soft_to_hard_message = ::gr::ccsds::soft_to_hard_message;


    py::class_<soft_to_hard_message,
               gr::sync_block,
               gr::block,
               gr::basic_block,
               std::shared_ptr<soft_to_hard_message>>(
        m, "soft_to_hard_message", D(soft_to_hard_message))

        .def(py::init(&soft_to_hard_message::make), D(soft_to_hard_message, make))


        ;
}
