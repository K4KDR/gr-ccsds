<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classgr_1_1ccsds_1_1conv__decode27" kind="class" prot="public">
    <compoundname>gr::ccsds::conv_decode27</compoundname>
    <basecompoundref prot="public" virt="virtual">sync_block</basecompoundref>
    <includes refid="conv__decode27_8h" local="no">conv_decode27.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classgr_1_1ccsds_1_1conv__decode27_1a8ed1a643d69188bd0e7037d2bd5a0eb1" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classgr_1_1ccsds_1_1conv__decode27" kindref="compound">conv_decode27</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;conv_decode27&gt; gr::ccsds::conv_decode27::sptr</definition>
        <argsstring></argsstring>
        <name>sptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/include/ccsds/conv_decode27.h" line="34" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/include/ccsds/conv_decode27.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgr_1_1ccsds_1_1conv__decode27_1abec9648ecb66a8408fda8405573239e9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgr_1_1ccsds_1_1conv__decode27_1a8ed1a643d69188bd0e7037d2bd5a0eb1" kindref="member">sptr</ref></type>
        <definition>static sptr gr::ccsds::conv_decode27::make</definition>
        <argsstring>(const unsigned char gen_poly_c1, const unsigned char gen_poly_c2, conv_puncturing27::punct_t puncturing_type, const unsigned int block_len, std::string ASM)</argsstring>
        <name>make</name>
        <param>
          <type>const unsigned char</type>
          <declname>gen_poly_c1</declname>
        </param>
        <param>
          <type>const unsigned char</type>
          <declname>gen_poly_c2</declname>
        </param>
        <param>
          <type><ref refid="namespacegr_1_1ccsds_1_1conv__puncturing27_1a3b70c7c0f0d0da176ee821dd59945ee8" kindref="member">conv_puncturing27::punct_t</ref></type>
          <declname>puncturing_type</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>block_len</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>ASM</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/include/ccsds/conv_decode27.h" line="35" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Perform unpuncturing and convloutional decoding on the input stream.</para><para>This block takes an asynchronous message of punctured convolutional encoded softbits. The input softbits are frame synchronized, which means that the leading and following ASM sequences have been stripped off and only contains the encoded symbols from the actual frame data. </para>    </briefdescription>
    <detaileddescription>
<para>It performs unpuncturing and viterbi decoding of the message and outputs the decoded data stream as a BLOB message of packed bytes.</para><para>Since before and after each message a known ASM is send, the knowledge of this ASM is used to determine the start and and state of the viterbi decoder as well as the tail sequence of the block, which is the start of the new ASM sequence that still depends on the data bits of the current block due to the code&apos;s constraint length.</para><para><xrefsect id="todo_1_todo000020"><xreftitle>Todo</xreftitle><xrefdescription><para>Synchronize unpuncturing with the puncturer at the sender side. Right now unpuncturing only works for rate 1/2 and 2/3 as they repeat every byte. </para></xrefdescription></xrefsect></para>    </detaileddescription>
    <inheritancegraph>
      <node id="190">
        <label>sync_block</label>
      </node>
      <node id="189">
        <label>gr::ccsds::conv_decode27</label>
        <link refid="classgr_1_1ccsds_1_1conv__decode27"/>
        <childnode refid="190" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="192">
        <label>sync_block</label>
      </node>
      <node id="191">
        <label>gr::ccsds::conv_decode27</label>
        <link refid="classgr_1_1ccsds_1_1conv__decode27"/>
        <childnode refid="192" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/marina/Documents/sdr1/gr-ccsds/include/ccsds/conv_decode27.h" line="32" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/include/ccsds/conv_decode27.h" bodystart="32" bodyend="36"/>
    <listofallmembers>
      <member refid="classgr_1_1ccsds_1_1conv__decode27_1abec9648ecb66a8408fda8405573239e9" prot="public" virt="non-virtual"><scope>gr::ccsds::conv_decode27</scope><name>make</name></member>
      <member refid="classgr_1_1ccsds_1_1conv__decode27_1a8ed1a643d69188bd0e7037d2bd5a0eb1" prot="public" virt="non-virtual"><scope>gr::ccsds::conv_decode27</scope><name>sptr</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
