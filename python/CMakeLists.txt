# Copyright 2011 Free Software Foundation, Inc.
#
# This file was generated by gr_modtool, a tool from the GNU Radio framework
# This file is a part of gr-ccsds
#
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
#
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.

########################################################################
# Include python install macros
########################################################################
include(GrPython)
if(NOT PYTHONINTERP_FOUND)
    return()
endif()

########################################################################
# Install python sources
########################################################################
GR_PYTHON_INSTALL(
    FILES
    __init__.py
	bpsk_frame_sync.py
    util.py DESTINATION ${GR_PYTHON_DIR}/ccsds
)

########################################################################
# Handle the unit tests
########################################################################
include(GrTest)

set(GR_TEST_TARGET_DEPS gnuradio-ccsds)
set(GR_TEST_PYTHON_DIRS ${CMAKE_BINARY_DIR}/swig)

GR_ADD_TEST(qa_blob_msg_sink ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/qa_blob_msg_sink.py)
GR_ADD_TEST(qa_blob_msg_source ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/qa_blob_msg_source.py)
GR_ADD_TEST(qa_softbit_msg_sink ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/qa_softbit_msg_sink.py)
GR_ADD_TEST(qa_softbit_msg_source ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/qa_softbit_msg_source.py)
GR_ADD_TEST(qa_conv_decode27 ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/qa_conv_decode27.py)
GR_ADD_TEST(qa_conv_encode27_bb ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/qa_conv_encode27_bb.py)
GR_ADD_TEST(qa_mpsk_ambiguity_resolver_f ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/qa_mpsk_ambiguity_resolver_f.py)
GR_ADD_TEST(qa_mpsk_ambiguity_resolver_chain ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/qa_mpsk_ambiguity_resolver_chain.py)
GR_ADD_TEST(qa_mpsk_detector_soft_cf ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/qa_mpsk_detector_soft_cf.py)
GR_ADD_TEST(qa_mpsk_mod_bc ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/qa_mpsk_mod_bc.py)
GR_ADD_TEST(qa_randomiser ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/qa_randomiser.py)
GR_ADD_TEST(qa_reversebits ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/qa_reversebits.py)
GR_ADD_TEST(qa_rs_chain ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/qa_rs_chain.py)
GR_ADD_TEST(qa_softbittobit ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/qa_softbittobit.py)
GR_ADD_TEST(qa_ldpc_encoder ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/qa_ldpc_encoder.py)
GR_ADD_TEST(qa_ldpc_decoder ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/qa_ldpc_decoder.py)
GR_ADD_TEST(qa_soft_to_hard_message ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/qa_soft_to_hard_message.py)
GR_ADD_TEST(qa_tag_storage ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/qa_tag_storage.py)
GR_ADD_TEST(qa_softbits_msg_to_bytes_b ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/qa_softbits_msg_to_bytes_b.py)
GR_ADD_TEST(qa_frame_sync ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/qa_frame_sync.py)
GR_ADD_TEST(qa_pack_bit_to_bytes ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/qa_pack_bit_to_bytes.py)
GR_ADD_TEST(qa_block_prefix_bb ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/qa_block_prefix_bb.py)
GR_ADD_TEST(qa_byte_to_softbits_bf ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/qa_byte_to_softbits_bf.py)
