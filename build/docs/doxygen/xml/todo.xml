<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="todo" kind="page">
    <compoundname>todo</compoundname>
    <title>Todo List</title>
    <detaileddescription>
<para><variablelist>
<varlistentry><term><anchor id="todo_1_todo000007"/>Global <ref refid="classccsds__blob__msg__source__b_1afb86d9975aad1c19e4b89b746476fd55" kindref="member">ccsds_blob_msg_source_b::d_astart</ref>  </term></varlistentry>
<listitem><para>Remove this workarround as soon as GNURadio has a method to signal the start of a flowgraph for asynchronous sources.  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000008"/>Global <ref refid="classccsds__dll__cc_1ad63bf342bec85e5362f8aa63dde54e93" kindref="member">ccsds_dll_cc::propagate_tags</ref>  (const unsigned int num_in)</term></varlistentry>
<listitem><para>Tag propagation is done with a fixed rate conversion. For higher timing accuracy use the timing estimations for rate conversion.  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000010"/>Class <ref refid="classccsds__fll__cc" kindref="compound">ccsds_fll_cc</ref>  </term></varlistentry>
<listitem><para>Make sure outer loop is only updated when frequency tags arrive and drop the substraction of the frequecy tag.  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000012"/>Global <ref refid="classccsds__fll__cc_1ad7601cbb35308d7b7c5a444d627730ba" kindref="member">ccsds_fll_cc::calc_power</ref>  (gr_complex *out, const gr_complex *in, const unsigned int num)</term></varlistentry>
<listitem><para>Check if volk kernel of new GNU radio version computes the right powers and switch back to volk if true.  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000011"/>Global <ref refid="classccsds__fll__cc_1acc9c8bce692a6b267e4c00273eeacca0" kindref="member">ccsds_fll_cc::d_lo_freq</ref>  </term></varlistentry>
<listitem><para>fix frequency feedback loop  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000013"/>Global <ref refid="classccsds__fll__cc_1ad01ab06dc66cd794e8d264823c99b7ff" kindref="member">ccsds_fll_cc::get_lo_tags</ref>  (float *lo_freqs, const unsigned int num)</term></varlistentry>
<listitem><para>Update to new lo frequency feedback scheme.  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000014"/>Global <ref refid="classccsds__fll__cc_1a9ba3ecb81dcd1a1e0c100066ded2ebf3" kindref="member">ccsds_fll_cc::substract_lo_freq</ref>  (double *tmp_f, float *tmp_lo, const unsigned int num)</term></varlistentry>
<listitem><para>remove frequency substraction  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000009"/>Global <ref refid="ccsds__fll__cc_8h_1a699d501de2a552f9bdeb38fbe1aca8e2" kindref="member">ccsds_make_fll_cc</ref>  (unsigned int obsv_length, float loop_bw, unsigned int power, gr_msg_queue_sptr msgq)</term></varlistentry>
<listitem><para>Match frquency corrections to new LO interface  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000017"/>Global <ref refid="classccsds__pll__cc_1a93ccc6a049b2c75ac30e373955d434f1" kindref="member">ccsds_pll_cc::remove_modulation</ref>  (gr_complex *tmp_c, const gr_complex *in, const unsigned int num)</term></varlistentry>
<listitem><para>Check volk power impementation of new GNU Radio version and switch back to volk if it works. Change documentation to require aligned arrays. </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000018"/>Global <ref refid="classccsds__pll__cc_1a177fa3957c49a7a3359a4e5c2691eced" kindref="member">ccsds_pll_cc::send_freq_estimate</ref>  (double est)</term></varlistentry>
<listitem><para>document new message passing type of frequency correction  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000019"/>Global <ref refid="classccsds__ticp__frame__source_1ae733e66511233385634aa1d775283f73" kindref="member">ccsds_ticp_frame_source::d_astart</ref>  </term></varlistentry>
<listitem><para>reove workarround  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000021"/>Global <ref refid="classgr_1_1ccsds_1_1blob__msg__source__b__impl_1a1eda1c01ee17140776eddb4995289da5" kindref="member">gr::ccsds::blob_msg_source_b_impl::d_astart</ref>  </term></varlistentry>
<listitem><para>Remove this workarround as soon as GNURadio has a method to signal the start of a flowgraph for asynchronous sources.  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000020"/>Class <ref refid="classgr_1_1ccsds_1_1conv__decode27" kindref="compound">gr::ccsds::conv_decode27</ref>  </term></varlistentry>
<listitem><para>Synchronize unpuncturing with the puncturer at the sender side. Right now unpuncturing only works for rate 1/2 and 2/3 as they repeat every byte.  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000022"/>Global <ref refid="classgr_1_1ccsds_1_1dll__cc__impl_1a355e3555205253f0f71da96a914814b9" kindref="member">gr::ccsds::dll_cc_impl::propagate_tags</ref>  (const unsigned int num_in)</term></varlistentry>
<listitem><para>Tag propagation is done with a fixed rate conversion. For higher timing accuracy use the timing estimations for rate conversion.  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000023"/>Class <ref refid="classgr_1_1ccsds_1_1lpf2" kindref="compound">gr::ccsds::lpf2</ref>  </term></varlistentry>
<listitem><para>Put filter into ccsds_ naming scheme  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000024"/>Global <ref refid="classgr_1_1ccsds_1_1pll__cc__impl_1a5eb4e3376601f29be7be29f7c06f7a85" kindref="member">gr::ccsds::pll_cc_impl::remove_modulation</ref>  (gr_complex *tmp_c, const gr_complex *in, const unsigned int num)</term></varlistentry>
<listitem><para>Check volk power impementation of new GNU Radio version and switch back to volk if it works. Change documentation to require aligned arrays. </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000025"/>Global <ref refid="classgr_1_1ccsds_1_1ticp__frame__source__impl_1a3ceacc484bb382e355386ae132749a97" kindref="member">gr::ccsds::ticp_frame_source_impl::d_astart</ref>  </term></varlistentry>
<listitem><para>reove workarround  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000015"/>Class <ref refid="classlpf" kindref="compound">lpf</ref>  </term></varlistentry>
<listitem><para>put <ref refid="group__filter" kindref="compound">CCSDS filter blocks</ref> into ccsds_ name schema.  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000016"/>Class <ref refid="classlpf2" kindref="compound">lpf2</ref>  </term></varlistentry>
<listitem><para>Put filter into ccsds_ naming scheme  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000001"/>Page <ref refid="page_mpsk_receiver" kindref="compound">M-PSK demodulation chain</ref>  </term></varlistentry>
<listitem><para>Put the ambiguity resolution and frame synchronization into this block as soon as Hierachial blocks can have message ports.</para><para>In the future this block should be able to switch between the two filters and leaving the GRC definition untouched.  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000003"/>Page <ref refid="page_mpsk_sender" kindref="compound">M-PSK modulation chain</ref>  </term></varlistentry>
<listitem><para>In the future this block should be able to switch between the two filters and leaving the GRC definition untouched. </para></listitem>
</variablelist>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
