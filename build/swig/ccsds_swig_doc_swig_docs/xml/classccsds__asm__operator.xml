<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classccsds__asm__operator" kind="class" prot="public">
    <compoundname>ccsds_asm_operator</compoundname>
    <includes refid="ccsds__asm__operator_8h" local="no">ccsds_asm_operator.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classccsds__asm__operator_1a31881f0b8ac0509abe99d0023ef179f2" prot="private" static="no" mutable="no">
        <type>unsigned char *</type>
        <definition>unsigned char* ccsds_asm_operator::d_ASM</definition>
        <argsstring></argsstring>
        <name>d_ASM</name>
        <briefdescription>
<para>Storage for attached snc marker. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>d_ASM_LEN </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_asm_operator.h" line="26" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_asm_operator.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classccsds__asm__operator_1a79c11c28a99aefbeca48529e77b2ccc6" prot="private" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int ccsds_asm_operator::d_ASM_LEN</definition>
        <argsstring></argsstring>
        <name>d_ASM_LEN</name>
        <briefdescription>
<para>Length of ASM in bytes. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>d_ASM </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_asm_operator.h" line="32" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_asm_operator.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classccsds__asm__operator_1a459d309220be530d0ca8678d260130ec" prot="private" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int ccsds_asm_operator::d_ASM_SYM_LEN</definition>
        <argsstring></argsstring>
        <name>d_ASM_SYM_LEN</name>
        <briefdescription>
<para>Length of ASM in symbols (rounded up). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_asm_operator.h" line="35" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_asm_operator.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classccsds__asm__operator_1abddc17deb584fccec3d1903057150aa8" prot="private" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int ccsds_asm_operator::d_BER_THRESHOLD</definition>
        <argsstring></argsstring>
        <name>d_BER_THRESHOLD</name>
        <briefdescription>
<para>Maximum number of bit errors that may occur between a sequence and the ASM to still consider the sequence as an ASM. If set to zero, sequence must match the ASM exactly. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_asm_operator.h" line="41" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_asm_operator.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classccsds__asm__operator_1a0db35cd83fa0939c1df66c239b9729c2" prot="private" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int ccsds_asm_operator::d_INFO_BITS_PER_SYMBOL</definition>
        <argsstring></argsstring>
        <name>d_INFO_BITS_PER_SYMBOL</name>
        <briefdescription>
<para>Number of information bits per symbol. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_asm_operator.h" line="44" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_asm_operator.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classccsds__asm__operator_1add0c54acbba647ec35b6783c0da1e8ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ccsds_asm_operator::ccsds_asm_operator</definition>
        <argsstring>(const unsigned char *ASM, const unsigned int ASM_LEN, const unsigned int BER_THRESHOLD, const unsigned int INFO_BITS_PER_SYMBOL=8)</argsstring>
        <name>ccsds_asm_operator</name>
        <param>
          <type>const unsigned char *</type>
          <declname>ASM</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>ASM_LEN</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>BER_THRESHOLD</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>INFO_BITS_PER_SYMBOL</declname>
          <defval>8</defval>
        </param>
        <briefdescription>
<para>Constructor of ASM operator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ASM</parametername>
</parameternamelist>
<parameterdescription>
<para>Attached sync marker to look for </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ASM_LEN</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the ASM in bytes. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>BER_THRESHOLD</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of bit errors that may occur between a sequence and the ASM to still consider the sequence as an ASM. If set to zero, sequence must match the ASM exactly. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>INFO_BITS_PER_SYMBOL</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of information bits per byte. Default is 8 (packed bytes). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_asm_operator.h" line="57" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_asm_operator.h" bodystart="57" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classccsds__asm__operator_1afc99365418dc79210b130e96174ac5fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ccsds_asm_operator::~ccsds_asm_operator</definition>
        <argsstring>()</argsstring>
        <name>~ccsds_asm_operator</name>
        <briefdescription>
<para>Deconstructor of ASM operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_asm_operator.h" line="67" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_asm_operator.h" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classccsds__asm__operator_1a7c5917b7b134eb2fbfa7048c615a1c60" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int ccsds_asm_operator::get_asm_sym_len</definition>
        <argsstring>(void)</argsstring>
        <name>get_asm_sym_len</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of unpacked symbols necesarry to hold the ASM. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_asm_operator.h" line="72" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_asm_operator.h" bodystart="72" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classccsds__asm__operator_1af08efae758ad5aa4eb1742fa5f141dcc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int ccsds_asm_operator::check_for_asm_hamming</definition>
        <argsstring>(const unsigned char *symbols, unsigned int offset_bits)</argsstring>
        <name>check_for_asm_hamming</name>
        <param>
          <type>const unsigned char *</type>
          <declname>symbols</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>offset_bits</declname>
        </param>
        <briefdescription>
<para>Checks if stream matches an ASM at given bit offset and return the number of bit errors found. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>symbols</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of unpacked bytes to check ASM against. Must contain at least d_ASM_SYM_LEN elements. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset_bits</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bits to ignore in the first symbol. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Hamming distance (number of bit positions that differ) between the symbols and the ASM. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_asm_operator.h" line="85" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_asm_operator.h" bodystart="85" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classccsds__asm__operator_1a03efba80ffc22dab929bd050a42eda61" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ccsds_asm_operator::check_for_asm</definition>
        <argsstring>(const unsigned char *symbols, unsigned int offset_bits)</argsstring>
        <name>check_for_asm</name>
        <param>
          <type>const unsigned char *</type>
          <declname>symbols</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>offset_bits</declname>
        </param>
        <briefdescription>
<para>Checks if stream matches an ASM at given bit offset. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>symbols</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of unpacked bytes to check ASM against. Must contain at least d_ASM_SYM_LEN elements. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset_bits</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bits to ignore in the first symbol. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><emphasis>true</emphasis> if stream is matching the ASM, <emphasis>false</emphasis> if not.</para></simplesect>
<simplesect kind="see"><para>d_BER_THRESHOLD</para></simplesect>
The stream is considered to match if <computeroutput>d_BER_THRESHOLD</computeroutput> or less bits differ. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_asm_operator.h" line="179" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_asm_operator.h" bodystart="179" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classccsds__asm__operator_1a8d3fc5db54a02faceeace051276272d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ccsds_asm_operator::search_asm</definition>
        <argsstring>(const unsigned char *stream, const unsigned int stream_len, unsigned int *offset_bytes, unsigned int *offset_bits)</argsstring>
        <name>search_asm</name>
        <param>
          <type>const unsigned char *</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>stream_len</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>offset_bytes</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>offset_bits</declname>
        </param>
        <briefdescription>
<para>Searches for ASM in the given stream. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of bytes in which to search for the ASM. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stream_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the stream. The last <computeroutput>d_ASM_SYM_LEN</computeroutput> bytes of this stream are not searched (as the ASM would only fit in partially). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>*offset_bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an unsigned int where the offset bytes between start of stream and the found ASM should be stored, if a match is found. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>*offset_bits</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an unsigned int where the offset bits between start of stream and the found ASM should be stored, if a match is found. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><emphasis>true</emphasis> if ASM is found, <emphasis>false</emphasis> otherwise.</para></simplesect>
The match with the minimum Hamming distance is searched. If this minimum Hamming distance is less or equal the <computeroutput>d_BER_THRESHOLD</computeroutput> a match is found, otherwise no match is found and <computeroutput>d_offset_bytes</computeroutput> and <computeroutput>d_offset_bits</computeroutput> are set to zero.</para><para>In case there are two matches with the same Hamming distance the one with the lower byte offset or lower bit offset (in this priority) is chosen. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_asm_operator.h" line="203" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_asm_operator.h" bodystart="203" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="classccsds__asm__operator_1a03574bb34242a73901b2f9a6ddc89054" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ccsds_asm_operator::copy_stream</definition>
        <argsstring>(unsigned char *stream_out, const unsigned char *stream_in, const unsigned int len, const unsigned int offset_bits)</argsstring>
        <name>copy_stream</name>
        <param>
          <type>unsigned char *</type>
          <declname>stream_out</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>stream_in</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>offset_bits</declname>
        </param>
        <briefdescription>
<para>Copy bitstream from a byte array with a bit offset into an aligned byte array. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stream_in</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of bytes to copy. First bit to copy is located in the first element of this array. If <computeroutput>offset_bit</computeroutput> is zero this array must contain at least <computeroutput>len</computeroutput> elements, if <computeroutput>offset_bit</computeroutput> is greater thatn zero, this array must contain at least <computeroutput>len+1</computeroutput> elements. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stream_out</parametername>
</parameternamelist>
<parameterdescription>
<para>Array in which the resulting bytes should be copied. Memory for at least <computeroutput>len</computeroutput> elements must be allocated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to copy. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset_bits</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bits to skip in the first byte, starting with the MSB. If offset_bit is zero this function copies the first <computeroutput>len</computeroutput> bytes from <computeroutput>stream_in</computeroutput> to <computeroutput>stream_out</computeroutput> by using <computeroutput>memcpy</computeroutput>. Otherwise the copy operation is done manually using bitwise operations.</para></parameterdescription>
</parameteritem>
</parameterlist>
The first <computeroutput>offset_bits</computeroutput> starting with the MSB from the first element of <computeroutput>stream_in</computeroutput> are skipped, afterwards all bits from <computeroutput>stream_in</computeroutput> are copied to <computeroutput>stream_out</computeroutput> until <computeroutput>len</computeroutput> bytes have been copied to <computeroutput>stream_out</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_asm_operator.h" line="252" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_asm_operator.h" bodystart="252" bodyend="276"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Outputs debug messages to stdout if defined. </para>    </briefdescription>
    <detaileddescription>
<para>Helper class for unpacked bit wise ASM search functions</para><para><simplesect kind="see"><para><ref refid="classccsds__mpsk__ambiguity__resolver__bb" kindref="compound">ccsds_mpsk_ambiguity_resolver_bb</ref> </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_asm_operator.h" line="18" column="1" bodyfile="/home/marina/Documents/sdr1/gr-ccsds/gr-ccsds/include/ccsds_asm_operator.h" bodystart="18" bodyend="278"/>
    <listofallmembers>
      <member refid="classccsds__asm__operator_1add0c54acbba647ec35b6783c0da1e8ba" prot="public" virt="non-virtual"><scope>ccsds_asm_operator</scope><name>ccsds_asm_operator</name></member>
      <member refid="classccsds__asm__operator_1a03efba80ffc22dab929bd050a42eda61" prot="public" virt="non-virtual"><scope>ccsds_asm_operator</scope><name>check_for_asm</name></member>
      <member refid="classccsds__asm__operator_1af08efae758ad5aa4eb1742fa5f141dcc" prot="public" virt="non-virtual"><scope>ccsds_asm_operator</scope><name>check_for_asm_hamming</name></member>
      <member refid="classccsds__asm__operator_1a03574bb34242a73901b2f9a6ddc89054" prot="public" virt="non-virtual"><scope>ccsds_asm_operator</scope><name>copy_stream</name></member>
      <member refid="classccsds__asm__operator_1a31881f0b8ac0509abe99d0023ef179f2" prot="private" virt="non-virtual"><scope>ccsds_asm_operator</scope><name>d_ASM</name></member>
      <member refid="classccsds__asm__operator_1a79c11c28a99aefbeca48529e77b2ccc6" prot="private" virt="non-virtual"><scope>ccsds_asm_operator</scope><name>d_ASM_LEN</name></member>
      <member refid="classccsds__asm__operator_1a459d309220be530d0ca8678d260130ec" prot="private" virt="non-virtual"><scope>ccsds_asm_operator</scope><name>d_ASM_SYM_LEN</name></member>
      <member refid="classccsds__asm__operator_1abddc17deb584fccec3d1903057150aa8" prot="private" virt="non-virtual"><scope>ccsds_asm_operator</scope><name>d_BER_THRESHOLD</name></member>
      <member refid="classccsds__asm__operator_1a0db35cd83fa0939c1df66c239b9729c2" prot="private" virt="non-virtual"><scope>ccsds_asm_operator</scope><name>d_INFO_BITS_PER_SYMBOL</name></member>
      <member refid="classccsds__asm__operator_1a7c5917b7b134eb2fbfa7048c615a1c60" prot="public" virt="non-virtual"><scope>ccsds_asm_operator</scope><name>get_asm_sym_len</name></member>
      <member refid="classccsds__asm__operator_1a8d3fc5db54a02faceeace051276272d4" prot="public" virt="non-virtual"><scope>ccsds_asm_operator</scope><name>search_asm</name></member>
      <member refid="classccsds__asm__operator_1afc99365418dc79210b130e96174ac5fe" prot="public" virt="non-virtual"><scope>ccsds_asm_operator</scope><name>~ccsds_asm_operator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
