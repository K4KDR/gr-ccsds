/*
 * Copyright 2023 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(constellation_ccsds_qpsk.h) */
/* BINDTOOL_HEADER_FILE_HASH(83496b85da0d956db9e9b603245042d5)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/ccsds/constellation_ccsds_qpsk.h>
// pydoc.h is automatically generated in the build directory
#include <constellation_ccsds_qpsk_pydoc.h>

void bind_constellation_ccsds_qpsk(py::module& m)
{

    using constellation_ccsds_qpsk = ::gr::ccsds::constellation_ccsds_qpsk;


    py::class_<constellation_ccsds_qpsk,
               gr::digital::constellation,
               std::shared_ptr<constellation_ccsds_qpsk>>(
        m, "constellation_ccsds_qpsk", D(constellation_ccsds_qpsk))

        .def(py::init(&constellation_ccsds_qpsk::make), D(constellation_ccsds_qpsk, make))


        .def("decision_maker",
             &constellation_ccsds_qpsk::decision_maker,
             py::arg("sample"),
             D(constellation_ccsds_qpsk, decision_maker))


        .def("calc_soft_dec",
             &constellation_ccsds_qpsk::calc_soft_dec,
             py::arg("sample"),
             py::arg("npwr"),
             D(constellation_ccsds_qpsk, calc_soft_dec))

        ;
}
